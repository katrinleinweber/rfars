counts(myFARS,
what = "fatalities",
when = 2011:2020,
where = "rural",
interval = c("year"),
involved = "speeding"
) %>%
ggplot(aes(x=date, y=n, label=scales::comma(n))) +
geom_col() +
geom_label(vjust=1.2) +
labs(x=NULL, y=NULL, title = "Speeding-Related Fatalities\nin Rural Virginia")
counts(myFARS,
what = "fatalities",
where = "rural",
interval = c("year"),
involved = "speeding"
) %>%
ggplot(aes(x=date, y=n, label=scales::comma(n))) +
geom_col() +
geom_label(vjust=1.2) +
labs(x=NULL, y=NULL, title = "Speeding-Related Fatalities\nin Rural Virginia")
devtools::load_all(".")
counts(
myFARS,
what = "crashes",
interval = c("year")
) %>%
ggplot(aes(x=date, y=n, label=scales::comma(n))) +
geom_col() +
geom_label(vjust=1.2) +
labs(x=NULL, y=NULL, title = "Fatal Crashes in Virginia")
counts(
myFARS,
what = "fatalities",
interval = c("year")
) %>%
ggplot(aes(x=date, y=n, label=scales::comma(n))) +
geom_col() +
geom_label(vjust=1.2) +
labs(x=NULL, y=NULL, title = "Fatalities in Virginia")
counts(myFARS,
what = "fatalities",
where = "rural",
interval = c("year")
) %>%
ggplot(aes(x=date, y=n, label=scales::comma(n))) +
geom_col() +
geom_label(vjust=1.2) +
labs(x=NULL, y=NULL, title = "Rural Fatalities in Virginia")
counts(myFARS,
what = "fatalities",
where = "rural",
interval = c("year"),
involved = "speeding"
) %>%
ggplot(aes(x=date, y=n, label=scales::comma(n))) +
geom_col() +
geom_label(vjust=1.2) +
labs(x=NULL, y=NULL, title = "Speeding-Related Fatalities\nin Rural Virginia")
bind_rows(
counts(myFARS,
what = "fatalities",
where = "rural",
interval = c("year"),
involved = "speeding"
) %>%
mutate(where = "Rural"),
counts(myFARS,
what = "fatalities",
where = "urban",
interval = c("year"),
involved = "speeding"
) %>%
mutate(where = "Urban")
) %>%
ggplot(aes(x=date, y=n, label=scales::comma(n))) +
geom_col() +
geom_label(vjust=1.2) +
facet_wrap(.~where) +
labs(x=NULL, y=NULL, title = "Speeding-Related Fatalities in Virginia", fill=NULL)
counts(
myFARS,
what = "crashes",
involved = "pedbike",
filterOnly = TRUE
) %>%
leaflet() %>%
addTiles() %>%
addHeatmap(group = "Heatmap", radius=10, blur=20, minOpacity = .01, max = .2, cellSize = 1) %>%
addCircleMarkers(
radius = 1.5,
color = "red",
stroke = FALSE,
fillOpacity = 0.7, group = "Crash Locations")
counts(
myFARS,
what = "crashes",
involved = "drugs",
filterOnly = TRUE
) %>%
filter(!is.na(lat), !is.na(lon)) %>%
leaflet() %>%
addTiles() %>%
addHeatmap(group = "Heatmap", radius=10, blur=20, minOpacity = .01, max = .2, cellSize = 1) %>%
addCircleMarkers(
radius = 1.5,
color = "red",
stroke = FALSE,
fillOpacity = 0.7, group = "Crash Locations")
counts(
myFARS,
what = "crashes",
involved = "older driver",
filterOnly = TRUE
) %>%
filter(!is.na(lat), !is.na(lon)) %>%
leaflet() %>%
addTiles() %>%
addHeatmap(group = "Heatmap", radius=10, blur=20, minOpacity = .01, max = .2, cellSize = 1) %>%
addCircleMarkers(
radius = 1.5,
color = "red",
stroke = FALSE,
fillOpacity = 0.7, group = "Crash Locations")
counts(
myFARS,
what = "crashes",
involved = "young driver",
filterOnly = TRUE
) %>%
filter(!is.na(lat), !is.na(lon)) %>%
leaflet() %>%
addTiles() %>%
addHeatmap(group = "Heatmap", radius=10, blur=20, minOpacity = .01, max = .2, cellSize = 1) %>%
addCircleMarkers(
radius = 1.5,
color = "red",
stroke = FALSE,
fillOpacity = 0.7, group = "Crash Locations")
#table(myFARS$flat$inj_sev)
#table(myFARS$flat$rest_mis)
myFARS$flat %>%
mutate(kabco = case_when(inj_sev == "Fatal Injury (K)" ~ 4,
inj_sev %in% c("Suspected Serious Injury (A)",
"Suspected Serious Injury(A)") ~ 3,
inj_sev %in% c("Suspected Minor Injury (B)",
"Suspected Minor Injury(B)") ~ 2,
inj_sev == "Possible Injury (C)" ~ 1,
inj_sev == "No Apparent Injury (O)" ~ 0,
TRUE ~ as.numeric(NA)
),
age_n = gsub("\\D+","", age) %>% as.numeric()) %>%
lm(kabco ~ age_n + rest_mis, data = .) %>%
summary()
table(myFARS$flat$vspd_lim)
table(myFARS$flat$rest_mis)
#table(myFARS$flat$inj_sev)
table(myFARS$flat$rest_mis, useNA = "always")
#table(myFARS$flat$inj_sev)
table(myFARS$flat$man_coll, useNA = "always")
#table(myFARS$flat$inj_sev)
table(myFARS$flat$man_coll, useNA = "ifany")
#table(myFARS$flat$inj_sev)
table(myFARS$flat$rest_use, useNA = "ifany")
table(myFARS$flat$per_typ, useNA = "ifany")
myFARS$flat %>%
filter(rest_use %in% c("Lap Belt Only Used",
"Shoulder Belt Only Used",
"None Used / Not Applicable",
"None Used/Not Applicable",
"Shoulder and Lap Belt Used"),
per_typ %in% c("Driver of a Motor Vehicle In-Transport",
"Passenger of a Motor Vehicle In-Transport")
) %>%
mutate(
rest_use = case_when(
rest_use %in% c("Lap Belt Only Used", "Shoulder Belt Only Used") ~ "Partial",
rest_use %in% c("None Used / Not Applicable", "None Used/Not Applicable") ~ "None",
rest_use %in% c("Shoulder and Lap Belt Used") ~ "Full",
TRUE ~ "Unknown"
) %>%
relevel(ref = "Full"),
kabco = case_when(
inj_sev == "Fatal Injury (K)" ~ 4,
inj_sev %in% c("Suspected Serious Injury (A)",
"Suspected Serious Injury(A)") ~ 3,
inj_sev %in% c("Suspected Minor Injury (B)",
"Suspected Minor Injury(B)") ~ 2,
inj_sev == "Possible Injury (C)" ~ 1,
inj_sev == "No Apparent Injury (O)" ~ 0,
TRUE ~ as.numeric(NA)
),
age_n = gsub("\\D+","", age) %>% as.numeric()) %>%
lm(kabco ~ age_n + rest_use, data = .) %>%
summary()
myFARS$flat %>%
filter(rest_use %in% c("Lap Belt Only Used",
"Shoulder Belt Only Used",
"None Used / Not Applicable",
"None Used/Not Applicable",
"Shoulder and Lap Belt Used"),
per_typ %in% c("Driver of a Motor Vehicle In-Transport",
"Passenger of a Motor Vehicle In-Transport")
) %>%
mutate(
rest_use = case_when(
rest_use %in% c("Lap Belt Only Used", "Shoulder Belt Only Used") ~ "Partial",
rest_use %in% c("None Used / Not Applicable", "None Used/Not Applicable") ~ "None",
rest_use %in% c("Shoulder and Lap Belt Used") ~ "Full",
TRUE ~ "Unknown"
) %>%
as.factor() %>%
relevel(ref = "Full"),
kabco = case_when(
inj_sev == "Fatal Injury (K)" ~ 4,
inj_sev %in% c("Suspected Serious Injury (A)",
"Suspected Serious Injury(A)") ~ 3,
inj_sev %in% c("Suspected Minor Injury (B)",
"Suspected Minor Injury(B)") ~ 2,
inj_sev == "Possible Injury (C)" ~ 1,
inj_sev == "No Apparent Injury (O)" ~ 0,
TRUE ~ as.numeric(NA)
),
age_n = gsub("\\D+","", age) %>% as.numeric()) %>%
lm(kabco ~ age_n + rest_use, data = .) %>%
summary()
?get_fars
library(rfars)
library(dplyr)
library(ggplot2)
library(magrittr)
get_fars(proceed = TRUE)
myFARS <- use_fars()
myFARS$flat$per_typ <-
ifelse(grepl("motorcycle",
myFARS$flat$body_typ,
ignore.case = TRUE),
"Motorcyclist",
myFARS$flat$per_typ)
?counts
compare_counts <- function(myFARS, what, involved=NULL){
bind_rows(
counts(myFARS, what=what, involved=involved, where="rural") %>%
mutate(where = "Rural"),
counts(myFARS, what=what, involved=involved, where="urban") %>%
mutate(where = "Urban")
) %>%
return()
}
compare_counts(myFARS, "crashes") %>%
ggplot(aes(x=date, y=n, label=scales::comma(n))) +
geom_col() +
geom_label(vjust=1) +
facet_wrap(.~where) +
labs(x=NULL, y=NULL, title = "Crashes", fill=NULL)
bind_rows(
counts(myFARS,
what = "crashes",
where = "rural",
filterOnly = TRUE
) %>%
filter(veh_no==1) %>% #crash type is on the vehicle-level, this prevents over-counting
select(id, year, acc_type) %>% unique() %>% group_by(acc_type, year) %>% summarize(n=n()) %>%
mutate(where = "Rural"),
counts(myFARS,
what = "crashes",
where = "urban",
filterOnly = TRUE
) %>%
filter(veh_no==1) %>%
select(id, year, acc_type) %>% unique() %>% group_by(acc_type, year) %>% summarize(n=n()) %>%
mutate(where = "Urban")
) %>%
filter(!is.na(acc_type)) %>%
group_by(where, acc_type) %>% summarize(n=sum(n, na.rm=TRUE)) %>%
tidyr::pivot_wider(names_from = "where", values_from = "n") %>%
mutate(Total = Urban + Rural,
rural_pct = Rural/Total) %>%
arrange(desc(Total)) %>%
slice(1:20) %>%
arrange(desc(rural_pct)) %>%
mutate(acc_type = reorder(acc_type, rural_pct)) %>%
ggplot(aes(y=acc_type, x=rural_pct, fill=Rural, label=scales::percent(rural_pct, accuracy = 1))) +
geom_col() +
geom_label(hjust=1, fill="white") +
scale_fill_continuous(labels=scales::comma) +
labs(x=NULL, y=NULL,
title = "20 Most Common Crash Types by Prevalence in Rural Areas") +
theme(plot.title.position = "plot")
# myFARS$flat %$% table(valign, year)
# myFARS$flat %$% table(vprofile, year)
# myFARS$flat %$% table(vprofile, valign)
myFARS$flat %>%
mutate(valign = ifelse(grepl("Curve", valign), "Curve", valign)) %>%
filter(veh_no == 1, #to avoid over-counting
rur_urb %in% c("Rural", "Urban"),
valign %in% c("Straight", "Curve")) %>%
select(id, valign, rur_urb) %>% unique() %>%
group_by(valign, rur_urb) %>%
summarize(n = n()) %>%
ggplot(aes(fill=rur_urb, y=n, x=valign, label=scales::comma(n, accuracy = 1))) +
geom_col(position = "dodge") +
geom_label(vjust=1, position = position_dodge(.9))
myFARS$flat %>%
mutate(vprofile = ifelse(vprofile %in% c("Uphill", "Downhill"), "Up/downhill", vprofile)) %>%
filter(veh_no == 1, #to avoid over-counting
rur_urb %in% c("Rural", "Urban"),
!(vprofile %in% c("Unknown", "Reported as Unknown", "Not Reported"))
) %>%
select(id, vprofile, rur_urb) %>% unique() %>%
group_by(vprofile, rur_urb) %>%
summarize(n = n()) %>%
ggplot(aes(fill=rur_urb, x=n, y=vprofile, label=scales::comma(n, accuracy = 1))) +
geom_col(position = "dodge") +
geom_label(vjust=1, position = position_dodge(.9))
myFARS$flat %>%
mutate(vprofile = ifelse(vprofile %in% c("Uphill", "Downhill"), "Up/downhill", vprofile)) %>%
filter(veh_no == 1, #to avoid over-counting
rur_urb %in% c("Rural", "Urban"),
!(vprofile %in% c("Unknown", "Reported as Unknown", "Not Reported"))
) %>%
select(id, vprofile, rur_urb) %>% unique() %>%
group_by(vprofile, rur_urb) %>%
summarize(n = n()) %>%
ggplot(aes(fill=rur_urb, x=n, y=vprofile, label=scales::comma(n, accuracy = 1))) +
geom_col(position = "dodge") +
geom_label(hjust=1, position = position_dodge(.9))
myFARS$flat %>%
mutate(
vprofile = ifelse(vprofile %in% c("Uphill", "Downhill"), "Up/downhill", vprofile),
valign = ifelse(grepl("Curve", valign), "Curve", valign)
) %>%
filter(veh_no == 1, #to avoid over-counting
rur_urb %in% c("Rural", "Urban"),
valign %in% c("Straight", "Curve"),
!(vprofile %in% c("Unknown", "Reported as Unknown", "Not Reported"))
) %>%
select(id, vprofile, valign, rur_urb) %>% unique() %>%
group_by(vprofile, valign, rur_urb) %>%
summarize(n = n()) %>%
ggplot(aes(x=valign, y=vprofile, fill=n, label=scales::comma(n))) +
geom_tile() +
facet_wrap(.~rur_urb) +
viridis::scale_fill_viridis() +
geom_label()
compare_counts(myFARS, "fatalities") %>%
ggplot(aes(x=date, y=n, label=scales::comma(n))) +
geom_col() +
geom_label(vjust=1) +
facet_wrap(.~where) +
labs(x=NULL, y=NULL, title = "Fatalities", fill=NULL)
myFARS$flat %>%
filter(rur_urb %in% c("Rural", "Urban")) %>%
filter(grepl("(K)", inj_sev)) %>%
group_by(rur_urb, per_typ) %>%
summarise(n=n()) %>%
filter(n>900) %>%
mutate(per_typ = stringr::str_wrap(per_typ, 15)) %>%
ggplot(aes(x=per_typ, y=n, fill=rur_urb, label = scales::comma(n))) +
geom_col(vjust=1, position = "dodge") +
geom_label(position = position_dodge(.9))
myFARS$flat %>%
filter(rur_urb %in% c("Rural", "Urban")) %>%
filter(grepl("(K)", inj_sev)) %>%
group_by(rur_urb, sex) %>%
summarise(n=n()) %>%
filter(n>900) %>%
mutate(sex = stringr::str_wrap(sex, 15)) %>%
ggplot(aes(x=sex, y=n, fill=rur_urb, label = scales::comma(n))) +
geom_col(vjust=1, position = "dodge") +
geom_label(position = position_dodge(.9))
myFARS$flat %>%
filter(rur_urb %in% c("Rural", "Urban")) %>%
filter(grepl("(K)", inj_sev)) %>%
group_by(rur_urb, sex) %>%
summarise(n=n()) %>%
filter(n>900) %>%
mutate(sex = stringr::str_wrap(sex, 15)) %>%
ggplot(aes(x=sex, y=n, fill=rur_urb, label = scales::comma(n))) +
geom_col(position = "dodge") +
geom_label(vjust=1, position = position_dodge(.9))
myFARS$multi_per %>%
filter(name == "race") %>%
select(state, st_case, veh_no, per_no, year, race=value) %>%
inner_join(myFARS$flat) %>%
filter(rur_urb %in% c("Rural", "Urban")) %>%
filter(grepl("(K)", inj_sev)) %>%
group_by(rur_urb, race) %>%
summarise(n=n()) %>%
filter(n>900) %>%
mutate(race = stringr::str_wrap(race, 15)) %>%
ggplot(aes(x=race, y=n, fill=rur_urb, label = scales::comma(n))) +
geom_col(vjust=1, position = "dodge") +
geom_label(position = position_dodge(.9))
myFARS$multi_per %>%
filter(name == "race") %>%
select(state, st_case, veh_no, per_no, year, race=value) %>%
inner_join(myFARS$flat) %>%
filter(rur_urb %in% c("Rural", "Urban")) %>%
filter(grepl("(K)", inj_sev)) %>%
group_by(rur_urb, race) %>%
summarise(n=n()) %>%
filter(n>900) %>%
mutate(race = stringr::str_wrap(race, 15)) %>%
ggplot(aes(x=race, y=n, fill=rur_urb, label = scales::comma(n))) +
geom_col(position = "dodge") +
geom_label(vjust=1, position = position_dodge(.9))
myFARS$flat %>%
filter(rur_urb %in% c("Rural", "Urban")) %>%
filter(grepl("(K)", inj_sev)) %>%
group_by(rur_urb, hispanic) %>%
summarise(n=n()) %>%
filter(n>900) %>%
mutate(hispanic = stringr::str_wrap(hispanic, 15)) %>%
ggplot(aes(x=hispanic, y=n, fill=rur_urb, label = scales::comma(n))) +
geom_col(position = "dodge") +
geom_label(vjust=1, position = position_dodge(.9))
myFARS$flat %>%
filter(rur_urb %in% c("Rural", "Urban")) %>%
filter(grepl("(K)", inj_sev)) %>%
filter(!(per_typ %in% c("Bicyclist", "Pedestrian"))) %>%
group_by(rur_urb, body_typ) %>%
summarise(n=n()) %>%
filter(n>3000) %>%
mutate(body_typ = stringr::str_wrap(body_typ, 80)) %>%
ggplot(aes(y=body_typ, x=n, fill=rur_urb, label=scales::comma(n, accuracy = 1))) +
geom_col(position = "dodge") +
geom_label(hjust=1, position = position_dodge(.9))
#myFARS$flat %$% table(helm_use, year)
#myFARS$flat %$% table(rest_use, year)
myFARS$flat %>%
filter(grepl("(K)", inj_sev),
per_typ == "Motorcyclist",
rur_urb %in% c("Rural", "Urban")) %>%
mutate(motorcyclist_helmet = case_when(
rest_use %in% c("No Helmet") ~ "No Helmet",
rest_use %in% c("DOT-Compliant Motorcycle Helmet",
"Helmet, Other than DOT-Compliant Motorcycle Helmet",
"Helmet, Unknown if DOT Compliant") ~ "Helmet Worn",
helm_use %in% c("No Helmet") ~ "No Helmet",
helm_use %in% c("DOT-Compliant Motorcycle Helmet",
"Helmet, Other than DOT-Compliant Motorcycle Helmet",
"Helmet, Unknown if DOT Compliant") ~ "Helmet Worn",
TRUE ~ "Other")
) %>%
group_by(rur_urb, motorcyclist_helmet) %>%
summarize(n = n()) %>%
ggplot(aes(fill=motorcyclist_helmet, y=n, x=rur_urb, label=scales::comma(n, accuracy = 1))) +
geom_col(position = "dodge") +
geom_label(vjust=1, position = position_dodge(.9))
myFARS$flat %>%
filter(grepl("(K)", inj_sev),
rur_urb %in% c("Rural", "Urban")) %>%
mutate(age_n = gsub("\\D+","", age) %>% as.numeric()) %>%
group_by(rur_urb, age_n) %>% summarize(n=n()) %>%
ggplot(aes(x=age_n, y=n, color = rur_urb)) +
geom_line()
myFARS$flat %>%
mutate(age_n = gsub("\\D+","", age) %>% as.numeric()) %>%
filter(grepl("(K)", inj_sev),
rur_urb %in% c("Rural", "Urban"),
hour < 25,
age_n <= 90) %>%
group_by(rur_urb, age_n, hour) %>% summarize(n=n()) %>%
ggplot(aes(x=hour, y=age_n, fill=n)) +
geom_tile() +
facet_wrap(.~rur_urb) +
viridis::scale_fill_viridis()
crashfactors <- c("distracted driver", "drowsy driver", "police pursuit",
"motorcycle", "pedalcyclist", "bicyclist", "pedestrian",
"pedbike", "young driver", "older driver", "speeding",
"alcohol", "drugs", "hit and run", "roadway departure", "rollover",
"large trucks"
)
for(crashfactor in crashfactors){
p <-
compare_counts(myFARS, "fatalities", crashfactor) %>%
ggplot(aes(x=year, y=n, label=scales::comma(n))) +
geom_col(position="dodge") +
facet_wrap(.~where) +
geom_label(position = position_dodge(.9), vjust=1) +
labs(title = paste0("Fatalities: ", crashfactor))
print(p)
}
myFARS$flat %>%
mutate(kabco = case_when(inj_sev == "Fatal Injury (K)" ~ "K",
inj_sev %in% c("Suspected Serious Injury (A)",
"Suspected Serious Injury(A)") ~ "A",
inj_sev %in% c("Suspected Minor Injury (B)",
"Suspected Minor Injury(B)") ~ "B",
inj_sev == "Possible Injury (C)" ~ "C",
inj_sev == "No Apparent Injury (O)" ~ "O",
TRUE ~ as.character(NA)
)) %>%
filter(!is.na(kabco), rur_urb %in% c("Rural", "Urban")) %>%
mutate(kabco = factor(kabco, levels = c("K", "A", "B", "C", "O"))) %>%
group_by(year, kabco, rur_urb) %>% summarize(n = n()) %>%
ggplot(aes(x=year, y=n, fill=rur_urb)) +
geom_col(position = "dodge") +
facet_wrap(.~kabco, nrow=1)
gc()
devtools::build_readme()
devtools::build_vignettes()
library(rfars)
devtools::clean_vignettes()
?counts
?validate_states
devtools::document()
library(rfars)
gc()
detach(rfars)
detach("rfars")
