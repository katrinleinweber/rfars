y
y=y-1
fars.accident <- read_basic_csv(x = "accident", wd = wd, rawfiles = rawfiles)
fars.vehicle <-
read_basic_csv(x = "vehicle", wd = wd, rawfiles = rawfiles) %>%
select(
-starts_with("vin_"),
-setdiff(intersect(names(fars.accident), names(.)),
c("state", "st_case")),
-contains("gvwr")
)
fars.person <-
read_basic_csv(x = "person", wd = wd, rawfiles = rawfiles) %>%
select(-setdiff(intersect(names(fars.accident), names(.)), c("state", "st_case"))) %>%
select(-setdiff(intersect(names(fars.vehicle), names(.)), c("state", "st_case", "veh_no")))
fars.cevent <- read_basic_csv(x = "cevent", wd = wd, rawfiles = rawfiles)
fars.weather <-
fars.accident %>%
select(state, st_case, weather1, weather2) %>%
mutate_all(as.character) %>%
pivot_longer(cols = -c(1:2), values_to = "weather") %>%
select(-name) %>%
filter(weather != "No Additional Atmospheric Conditions")
fars.accident <- fars.accident %>% select(-contains("weather"))
fars.crashrf <-
fars.accident %>%
select(state, st_case, cf1, cf2, cf3) %>%
mutate_all(as.character) %>%
pivot_longer(cols = -c(1:2), values_to = "crashrf") %>%
select(-name) %>%
unique()
fars.accident <- fars.accident %>% select(-c(cf1, cf2, cf3))
fars.distract <- read_basic_csv(x = "distract", wd = wd, rawfiles = rawfiles)
fars.drimpair <- read_basic_csv(x = "drimpair", wd = wd, rawfiles = rawfiles)
fars.factor <- read_basic_csv(x = "factor", wd = wd, rawfiles = rawfiles)
fars.maneuver <- read_basic_csv(x = "maneuver", wd = wd, rawfiles = rawfiles)
fars.violatn <- read_basic_csv(x = "violatn", wd = wd, rawfiles = rawfiles)
fars.vision <- read_basic_csv(x = "vision", wd = wd, rawfiles = rawfiles)
fars.damage <- read_basic_csv(x = "damage", wd = wd, rawfiles = rawfiles)
fars.vehiclesf <-
fars.vehicle %>%
select(state, st_case, veh_no, veh_sc1, veh_sc2) %>%
mutate_all(as.character) %>%
pivot_longer(cols = -c(1:3), values_to = "vehiclesf") %>%
select(-name) %>%
unique()
fars.vehicle <- fars.vehicle %>% select(-starts_with("veh_sc"))
fars.driverrf <-
fars.vehicle %>%
select(state, st_case, veh_no, dr_sf1, dr_sf2, dr_sf3, dr_sf4) %>%
mutate_all(as.character) %>%
pivot_longer(cols = -c(1:3), values_to = "driverrf") %>%
select(-name) %>%
unique()
fars.vehicle <- fars.vehicle %>% select(-starts_with("dr_sf"))
View(fars.person)
fars.person$y
y
y=2014
message(paste("Importing the raw", y, "files..................."))
wd <- paste0(raw_dir, "/", y, "/") %>% gsub(pattern = "//", replacement = "/", x = .)
# Get list of raw data files
rawfiles <-
data.frame(filename = list.files(wd, recursive = TRUE)) %>%
mutate(cleaned  = stringr::str_to_lower(filename) %>%
gsub(x=., pattern = ".csv", replacement = "")
)
fars.pbtype <-
read_basic_csv(x = "pbtype", wd = wd, rawfiles = rawfiles) %>%
select(-setdiff(intersect(names(fars.person), names(.)), c("state", "st_case", "veh_no", "per_no"))) %>%
select(-pbptype, -pbage, -pbsex)
View(fars.pbtype)
y=2013
message(paste("Importing the raw", y, "files..................."))
wd <- paste0(raw_dir, "/", y, "/") %>% gsub(pattern = "//", replacement = "/", x = .)
# Get list of raw data files
rawfiles <-
data.frame(filename = list.files(wd, recursive = TRUE)) %>%
mutate(cleaned  = stringr::str_to_lower(filename) %>%
gsub(x=., pattern = ".csv", replacement = "")
)
y
wd
fars.accident <- read_basic_csv(x = "accident", wd = wd, rawfiles = rawfiles)
## vehicle ----
fars.vehicle <-
read_basic_csv(x = "vehicle", wd = wd, rawfiles = rawfiles) %>%
select(
-starts_with("vin_"),
-setdiff(intersect(names(fars.accident), names(.)),
c("state", "st_case")),
-contains("gvwr")
)
## person ----
fars.person <-
read_basic_csv(x = "person", wd = wd, rawfiles = rawfiles) %>%
select(-setdiff(intersect(names(fars.accident), names(.)), c("state", "st_case"))) %>%
select(-setdiff(intersect(names(fars.vehicle), names(.)), c("state", "st_case", "veh_no")))
# accident-level files ----
## multiple-row files ----
### cevent ----
fars.cevent <- read_basic_csv(x = "cevent", wd = wd, rawfiles = rawfiles)
### weather ----
# NOTE this moves from the accident file to the weather file in 2020
fars.weather <-
fars.accident %>%
select(state, st_case, weather1, weather2) %>%
mutate_all(as.character) %>%
pivot_longer(cols = -c(1:2), values_to = "weather") %>%
select(-name) %>%
filter(weather != "No Additional Atmospheric Conditions")
fars.accident <- fars.accident %>% select(-contains("weather"))
### crashrf ----
# NOTE this moves from the accident file to the weather file in 2020
fars.crashrf <-
fars.accident %>%
select(state, st_case, cf1, cf2, cf3) %>%
mutate_all(as.character) %>%
pivot_longer(cols = -c(1:2), values_to = "crashrf") %>%
select(-name) %>%
unique()
fars.accident <- fars.accident %>% select(-c(cf1, cf2, cf3))
# vehicle-level files ----
## x parkwork ----
## multi-row files ----
### x vsoe ----
### distract ----
fars.distract <- read_basic_csv(x = "distract", wd = wd, rawfiles = rawfiles)
### drimpair ----
fars.drimpair <- read_basic_csv(x = "drimpair", wd = wd, rawfiles = rawfiles)
### factor ----
fars.factor <- read_basic_csv(x = "factor", wd = wd, rawfiles = rawfiles)
### maneuver ----
fars.maneuver <- read_basic_csv(x = "maneuver", wd = wd, rawfiles = rawfiles)
### violatn ----
fars.violatn <- read_basic_csv(x = "violatn", wd = wd, rawfiles = rawfiles)
### vision ----
fars.vision <- read_basic_csv(x = "vision", wd = wd, rawfiles = rawfiles)
### damage ----
fars.damage <- read_basic_csv(x = "damage", wd = wd, rawfiles = rawfiles)
### vehiclesf ----
# NOTE this was moved from the vehicle file in 2020
fars.vehiclesf <-
fars.vehicle %>%
select(state, st_case, veh_no, veh_sc1, veh_sc2) %>%
mutate_all(as.character) %>%
pivot_longer(cols = -c(1:3), values_to = "vehiclesf") %>%
select(-name) %>%
unique()
fars.vehicle <- fars.vehicle %>% select(-starts_with("veh_sc"))
### x pvehiclesf ----
# NOTE this was moved from the vehicle file in 2020
# fars.pvehiclesf <- fars.vehicle %>%
#   select(state, st_case, veh_no, veh_sc1, veh_sc2) %>%
#   mutate_all(as.character) %>%
#   pivot_longer(cols = -c(1:3), values_to = "pvehiclesf") %>%
#   select(-name) %>%
#   unique()
#
# fars.vehicle <- fars.vehicle %>% select(-starts_with("veh_sc"))
### driverrf ----
# NOTE this was moved from the vehicle file in 2020
fars.driverrf <-
fars.vehicle %>%
select(state, st_case, veh_no, dr_sf1, dr_sf2, dr_sf3, dr_sf4) %>%
mutate_all(as.character) %>%
pivot_longer(cols = -c(1:3), values_to = "driverrf") %>%
select(-name) %>%
unique()
fars.vehicle <- fars.vehicle %>% select(-starts_with("dr_sf"))
# person-level files ----
## pbtype ----
# NOTE data was not captured prior to 2014
## safetyeq ----
fars.safetyeq <-
read_basic_csv(x = "safetyeq", wd = wd, rawfiles = rawfiles) %>%
select(-setdiff(intersect(names(fars.person), names(.)),
c("state", "st_case", "veh_no", "per_no")))
## multi-row files ----
### nmcrash ----
fars.nmcrash <- read_basic_csv(x = "nmcrash", wd = wd, rawfiles = rawfiles)
### nmimpair ----
fars.nmimpair <- read_basic_csv(x = "nmimpair", wd = wd, rawfiles = rawfiles)
### nmprior ----
fars.nmprior <- read_basic_csv(x = "nmprior", wd = wd, rawfiles = rawfiles)
### x nmdistract ----
# NOTE this data was not captured prior to 2019
### drugs ----
# NOTE this was moved from the person file in 2018
fars.drugs <-
fars.person %>%
select(state, st_case, veh_no, per_no, drugtst1:drugres3) %>%
mutate_all(as.character) %>%
pivot_longer(cols = -c(1:4)) %>%
mutate(what = substr(name, 5, 7),
what = ifelse(what=="tst", "drugspec", "drugres"),
num  = substr(name, 8, 8)) %>%
select(-name) %>%
unique() %>%
pivot_wider(names_from = "what", values_from = "value") %>%
select(-num) %>%
unique()
fars.person <- fars.person %>% select(-starts_with("drugtst"), -starts_with("drugres"))
### race ----
# NOTE this was moved from the person file in 2019
fars.race <-
fars.person %>%
select(state, st_case, veh_no, per_no, race) %>%
mutate_all(as.character) %>%
pivot_longer(cols = -c(1:4), values_to = "race") %>%
select(-name) %>%
unique()
fars.person <- fars.person %>% select(-race)
### personrf ----
# NOTE this was moved from the person file in 2020
fars.personrf <-
fars.person %>%
select(state, st_case, veh_no, per_no, p_sf1, p_sf2, p_sf3) %>%
mutate_all(as.character) %>%
pivot_longer(cols = -c(1:4), values_to = "personrf") %>%
select(-name) %>%
unique()
fars.person <- fars.person %>% select(-starts_with("p_sf"))
# produce flat file ----
fars <-
fars.accident %>%
left_join(fars.person, by = c("state", "st_case")) %>%
#! This order (accident >> person >> vehicle) is very important for including non-motorists
left_join(fars.vehicle, by = c("state", "st_case", "veh_no")) %>%
#left_join(fars.pbtype, by = c("state", "st_case", "veh_no", "per_no")) %>%
left_join(fars.safetyeq, by = c("state", "st_case", "veh_no", "per_no")) %>%
as.data.frame() %>%
# State filter
filter(state %in% geo_filtered$state_name_full) %>%
# Dates
# mutate(
#   date_crash = lubridate::make_datetime(year, match(month, month.name), day, hour, minute),
#   date_death = lubridate::make_datetime(death_yr, match(death_mo, month.name), death_da, death_hr, death_mn),
#   ) %>%
# Generate state-independent id for each crash
mutate(id = paste0(year, st_case)) %>%
# Final organization
select(year, state, st_case, id,
#date_crash,
veh_no, per_no,
county, city,
lon = longitud,
lat = latitude,
everything())
devtools::load_all()
message(paste("Importing the raw", y, "files..................."))
wd <- paste0(raw_dir, "/", y, "/") %>% gsub(pattern = "//", replacement = "/", x = .)
# Get list of raw data files
rawfiles <-
data.frame(filename = list.files(wd, recursive = TRUE)) %>%
mutate(cleaned  = stringr::str_to_lower(filename) %>%
gsub(x=., pattern = ".csv", replacement = "")
)
if(y==2013) prep_fars_2013(y, wd, rawfiles, prepared_dir, geo_filtered)
y=2014
message(paste("Importing the raw", y, "files..................."))
wd <- paste0(raw_dir, "/", y, "/") %>% gsub(pattern = "//", replacement = "/", x = .)
# Get list of raw data files
rawfiles <-
data.frame(filename = list.files(wd, recursive = TRUE)) %>%
mutate(cleaned  = stringr::str_to_lower(filename) %>%
gsub(x=., pattern = ".csv", replacement = "")
)
rawfiles
fars.accident <- read_basic_csv(x = "accident", wd = wd, rawfiles = rawfiles)
fars.vehicle <-
read_basic_csv(x = "vehicle", wd = wd, rawfiles = rawfiles) %>%
select(
-starts_with("vin_"),
-setdiff(intersect(names(fars.accident), names(.)),
c("state", "st_case")),
-contains("gvwr")
)
fars.person <-
read_basic_csv(x = "person", wd = wd, rawfiles = rawfiles) %>%
select(-setdiff(intersect(names(fars.accident), names(.)), c("state", "st_case"))) %>%
select(-setdiff(intersect(names(fars.vehicle), names(.)), c("state", "st_case", "veh_no")))
fars.cevent <- read_basic_csv(x = "cevent", wd = wd, rawfiles = rawfiles)
fars.weather <-
fars.accident %>%
select(state, st_case, weather1, weather2) %>%
mutate_all(as.character) %>%
pivot_longer(cols = -c(1:2), values_to = "weather") %>%
select(-name) %>%
filter(weather != "No Additional Atmospheric Conditions")
fars.accident <- fars.accident %>% select(-contains("weather"))
fars.crashrf <-
fars.accident %>%
select(state, st_case, cf1, cf2, cf3) %>%
mutate_all(as.character) %>%
pivot_longer(cols = -c(1:2), values_to = "crashrf") %>%
select(-name) %>%
unique()
fars.accident <- fars.accident %>% select(-c(cf1, cf2, cf3))
fars.distract <- read_basic_csv(x = "distract", wd = wd, rawfiles = rawfiles)
fars.drimpair <- read_basic_csv(x = "drimpair", wd = wd, rawfiles = rawfiles)
fars.factor <- read_basic_csv(x = "factor", wd = wd, rawfiles = rawfiles)
fars.maneuver <- read_basic_csv(x = "maneuver", wd = wd, rawfiles = rawfiles)
fars.violatn <- read_basic_csv(x = "violatn", wd = wd, rawfiles = rawfiles)
fars.vision <- read_basic_csv(x = "vision", wd = wd, rawfiles = rawfiles)
fars.damage <- read_basic_csv(x = "damage", wd = wd, rawfiles = rawfiles)
fars.vehiclesf <-
fars.vehicle %>%
select(state, st_case, veh_no, veh_sc1, veh_sc2) %>%
mutate_all(as.character) %>%
pivot_longer(cols = -c(1:3), values_to = "vehiclesf") %>%
select(-name) %>%
unique()
fars.vehicle <- fars.vehicle %>% select(-starts_with("veh_sc"))
fars.driverrf <-
fars.vehicle %>%
select(state, st_case, veh_no, dr_sf1, dr_sf2, dr_sf3, dr_sf4) %>%
mutate_all(as.character) %>%
pivot_longer(cols = -c(1:3), values_to = "driverrf") %>%
select(-name) %>%
unique()
fars.vehicle <- fars.vehicle %>% select(-starts_with("dr_sf"))
fars.pbtype <-
read_basic_csv(x = "pbtype", wd = wd, rawfiles = rawfiles) %>%
select(-setdiff(intersect(names(fars.person), names(.)), c("state", "st_case", "veh_no", "per_no"))) %>%
select(-pbptype, -pbage, -pbsex)
fars.safetyeq <-
read_basic_csv(x = "safetyeq", wd = wd, rawfiles = rawfiles) %>%
select(-setdiff(intersect(names(fars.person), names(.)),
c("state", "st_case", "veh_no", "per_no")))
fars.nmcrash <- read_basic_csv(x = "nmcrash", wd = wd, rawfiles = rawfiles)
fars.nmimpair <- read_basic_csv(x = "nmimpair", wd = wd, rawfiles = rawfiles)
fars.nmprior <- read_basic_csv(x = "nmprior", wd = wd, rawfiles = rawfiles)
fars.drugs <-
fars.person %>%
select(state, st_case, veh_no, per_no, drugtst1:drugres3) %>%
mutate_all(as.character) %>%
pivot_longer(cols = -c(1:4)) %>%
mutate(what = substr(name, 5, 7),
what = ifelse(what=="tst", "drugspec", "drugres"),
num  = substr(name, 8, 8)) %>%
select(-name) %>%
unique() %>%
pivot_wider(names_from = "what", values_from = "value") %>%
select(-num) %>%
unique()
fars.person <- fars.person %>% select(-starts_with("drugtst"), -starts_with("drugres"))
fars.race <-
fars.person %>%
select(state, st_case, veh_no, per_no, race) %>%
mutate_all(as.character) %>%
pivot_longer(cols = -c(1:4), values_to = "race") %>%
select(-name) %>%
unique()
fars.person <- fars.person %>% select(-race)
fars.personrf <-
fars.person %>%
select(state, st_case, veh_no, per_no, p_sf1, p_sf2, p_sf3) %>%
mutate_all(as.character) %>%
pivot_longer(cols = -c(1:4), values_to = "personrf") %>%
select(-name) %>%
unique()
fars.person <- fars.person %>% select(-starts_with("p_sf"))
fars <-
fars.accident %>%
left_join(fars.person, by = c("state", "st_case")) %>%
#! This order (accident >> person >> vehicle) is very important for including non-motorists
left_join(fars.vehicle, by = c("state", "st_case", "veh_no")) %>%
left_join(fars.pbtype, by = c("state", "st_case", "veh_no", "per_no")) %>%
left_join(fars.safetyeq, by = c("state", "st_case", "veh_no", "per_no")) %>%
as.data.frame()
fars <-
fars.accident %>%
left_join(fars.person, by = c("state", "st_case")) %>%
#! This order (accident >> person >> vehicle) is very important for including non-motorists
left_join(fars.vehicle, by = c("state", "st_case", "veh_no")) %>%
left_join(fars.pbtype, by = c("state", "st_case", "veh_no", "per_no")) %>%
left_join(fars.safetyeq, by = c("state", "st_case", "veh_no", "per_no")) %>%
as.data.frame() %>%
# State filter
filter(state %in% geo_filtered$state_name_full)
geo_filtered$state_name_full
table(fars$state)
geo_filtered
table(fars.accident$state)
unique(c(geo_filtered$state_name_full, geo_filtered$fips_state))
fars <-
fars.accident %>%
left_join(fars.person, by = c("state", "st_case")) %>%
#! This order (accident >> person >> vehicle) is very important for including non-motorists
left_join(fars.vehicle, by = c("state", "st_case", "veh_no")) %>%
left_join(fars.pbtype, by = c("state", "st_case", "veh_no", "per_no")) %>%
left_join(fars.safetyeq, by = c("state", "st_case", "veh_no", "per_no")) %>%
as.data.frame() %>%
# State filter
filter(state %in% unique(c(geo_filtered$state_name_full, geo_filtered$fips_state)))
fars <-
fars.accident %>%
left_join(fars.person, by = c("state", "st_case")) %>%
#! This order (accident >> person >> vehicle) is very important for including non-motorists
left_join(fars.vehicle, by = c("state", "st_case", "veh_no")) %>%
left_join(fars.pbtype, by = c("state", "st_case", "veh_no", "per_no")) %>%
left_join(fars.safetyeq, by = c("state", "st_case", "veh_no", "per_no")) %>%
as.data.frame() %>%
# State filter
filter(state %in% unique(c(geo_filtered$state_name_full, geo_filtered$fips_state))) %>%
# Dates
# mutate(
#   date_crash = lubridate::make_datetime(year, match(month, month.name), day, hour, minute),
#   date_death = lubridate::make_datetime(death_yr, match(death_mo, month.name), death_da, death_hr, death_mn),
#   ) %>%
# Generate state-independent id for each crash
mutate(id = paste0(year, st_case)) %>%
# Final organization
select(year, state, st_case, id,
#date_crash,
veh_no, per_no,
county, city,
lon = longitud,
lat = latitude,
everything())
devtools::load_all()
y
message(paste("Importing the raw", y, "files..................."))
wd <- paste0(raw_dir, "/", y, "/") %>% gsub(pattern = "//", replacement = "/", x = .)
# Get list of raw data files
rawfiles <-
data.frame(filename = list.files(wd, recursive = TRUE)) %>%
mutate(cleaned  = stringr::str_to_lower(filename) %>%
gsub(x=., pattern = ".csv", replacement = "")
)
if(y==2014) prep_fars_2017(y, wd, rawfiles, prepared_dir, geo_filtered)
View(fars.accident)
head(fars)
length(unique(fars$st_case))
y
y
y=y-1
y
message(paste("Importing the raw", y, "files..................."))
wd <- paste0(raw_dir, "/", y, "/") %>% gsub(pattern = "//", replacement = "/", x = .)
# Get list of raw data files
rawfiles <-
data.frame(filename = list.files(wd, recursive = TRUE)) %>%
mutate(cleaned  = stringr::str_to_lower(filename) %>%
gsub(x=., pattern = ".csv", replacement = "")
)
if(y==2013) prep_fars_2013(y, wd, rawfiles, prepared_dir, geo_filtered)
y=y-1
y
message(paste("Importing the raw", y, "files..................."))
wd <- paste0(raw_dir, "/", y, "/") %>% gsub(pattern = "//", replacement = "/", x = .)
# Get list of raw data files
rawfiles <-
data.frame(filename = list.files(wd, recursive = TRUE)) %>%
mutate(cleaned  = stringr::str_to_lower(filename) %>%
gsub(x=., pattern = ".csv", replacement = "")
)
# Year-specific import-then-export-CSV functions
if(y==2020) prep_fars_2020(y, wd, rawfiles, prepared_dir, geo_filtered)
if(y==2019) prep_fars_2019(y, wd, rawfiles, prepared_dir, geo_filtered)
if(y==2018) prep_fars_2018(y, wd, rawfiles, prepared_dir, geo_filtered)
if(y==2017) prep_fars_2017(y, wd, rawfiles, prepared_dir, geo_filtered)
if(y==2016) prep_fars_2017(y, wd, rawfiles, prepared_dir, geo_filtered)
if(y==2015) prep_fars_2017(y, wd, rawfiles, prepared_dir, geo_filtered)
if(y==2014) prep_fars_2017(y, wd, rawfiles, prepared_dir, geo_filtered)
if(y==2013) prep_fars_2013(y, wd, rawfiles, prepared_dir, geo_filtered)
if(y==2012) prep_fars_2013(y, wd, rawfiles, prepared_dir, geo_filtered)
y
y=y-1
message(paste("Importing the raw", y, "files..................."))
wd <- paste0(raw_dir, "/", y, "/") %>% gsub(pattern = "//", replacement = "/", x = .)
# Get list of raw data files
rawfiles <-
data.frame(filename = list.files(wd, recursive = TRUE)) %>%
mutate(cleaned  = stringr::str_to_lower(filename) %>%
gsub(x=., pattern = ".csv", replacement = "")
)
fars.damage <- read_basic_csv(x = "damage", wd = wd, rawfiles = rawfiles)
fars.vehicle <-
read_basic_csv(x = "vehicle", wd = wd, rawfiles = rawfiles) %>%
select(
-starts_with("vin_"),
-setdiff(intersect(names(fars.accident), names(.)),
c("state", "st_case")),
-contains("gvwr")
)
table(fars.vehicle$impact1)
table(fars.vehicle$impact2)
names(fars.vehicle)
View(fars.vehicle)
stop("Data not available prior to 2015.")
years
# Check years
ymax <- max(as.numeric(years), na.rm = TRUE)
ymin <- min(as.numeric(years), na.rm = TRUE)
ymax
ymin
if(ymax > 2020) stop("Data not available beyond to 2020")
if(ymin < 2015) stop("Data not available prior to 2015.")
devtools::load_all()
library(rfars)
library(tidyverse)
library(leaflet)
# library(leaflet.extras)
myFARS <-
get_fars(years = 2016:2020, states="Virginia") %>%
use_fars()
install.packages("available")
available::available("rfars")
usethis::use_readme_md()
usethis::use_readme_rmd()
