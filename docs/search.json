[{"path":"https://s87jackson.github.io/rfars/articles/Crash_Sequences.html","id":"data","dir":"Articles","previous_headings":"","what":"Data","title":"Crash Sequences","text":"First download data. Calling get_fars(proceed=TRUE) download data 2015 2020 states, store ‘FARS data’ folder working directory, subfolders raw prepared files. proceed set FALSE, (default) R ask permission downloading files. simplicity, import one year data one state. data hard drive, don’t need download . Calling use_fars() looks working directory prepared FARS files, stacks , brings current environment. Vsoe data stored events tibble object returned use_fars(). see top 10 individual events:  can also see top 10 common sequences: consider state transitions - transition one event next sequence. example, sequence -B-C-D three transitions: B, B C, C D. graph shows subset common transitions crash sequences. interpreted follows: event y-axis followed event x-axis percentage sequences shown intersection two events. example, vehicles went ‘re-entering roadway’ ‘cross centerline’ 36% sequences. Note added state labelled ‘Pre-Crash’ help account sequences just one event.","code":"get_fars(years = 2020, states = \"VA\", proceed=TRUE) #> Raw data files have been saved to C:/Users/s87ja/Dropbox/Work/toXcel/FARS/rfars/vignettes/FARS data/raw/ #> Preparing the 2020 files................... #> Prepared data files have been saved to C:/Users/s87ja/Dropbox/Work/toXcel/FARS/rfars/vignettes/FARS data/prepared/ myFARS <- use_fars() myFARS$events %>%   group_by(soe) %>% summarize(n=n()) %>%   arrange(desc(n)) %>%   slice(1:10) %>%      ggplot(aes(x=n, y=reorder(soe, n), label=scales::comma(n))) +     geom_col() +     geom_label() myFARS$events %>%   select(-aoi) %>%   pivot_wider(names_from = \"veventnum\", values_from = \"soe\", values_fill = \"x\",               names_prefix = \"event\") %>%   select(starts_with(\"event\")) %>%   group_by_all() %>%   summarize(n=n(), .groups = \"drop\") %>%   arrange(desc(n)) %>%   slice(1:10) %>%   select(event1, event2, n) #> # A tibble: 10 × 3 #>    event1                     event2                         n #>    <chr>                      <chr>                      <int> #>  1 Motor Vehicle In-Transport x                            421 #>  2 Pedestrian                 x                             97 #>  3 Cross Centerline           Motor Vehicle In-Transport    52 #>  4 Motor Vehicle In-Transport Motor Vehicle In-Transport    42 #>  5 Parked Motor Vehicle       x                             34 #>  6 Ran Off Roadway - Right    Tree (Standing Only)          25 #>  7 Ran Off Roadway - Left     Tree (Standing Only)          24 #>  8 Motor Vehicle In-Transport Rollover/Overturn             10 #>  9 Motor Vehicle In-Transport Ran Off Roadway - Left         9 #> 10 Motor Vehicle In-Transport Ran Off Roadway - Right        9 myFARS$events %>%   group_by(year, state, st_case, veh_no) %>%   dplyr::rename(event_to = soe) %>%   mutate(event_from = data.table::shift(event_to, fill = \"Pre-Crash\")) %>%   select(event_from, event_to) %>%   group_by(event_from, event_to) %>% summarize(n=n()) %>%   group_by(event_from) %>% mutate(n_from = sum(n)) %>%   mutate(n_pct = n/n_from) %>%   filter(n_pct>.1, n>5) %>%   mutate(event_from = stringr::str_wrap(event_from, 40),          event_to = stringr::str_wrap(event_to, 40)) %>%    ggplot(aes(y=event_from, x=event_to, fill=n_pct, label=scales::percent(n_pct, accuracy = 1))) +     viridis::scale_fill_viridis() +     geom_label() +     theme(       axis.text.x.bottom = element_text(angle=270, hjust = 0, vjust=.5),       legend.position = \"none\"       ) #> Adding missing grouping variables: `year`, `state`, `st_case`, `veh_no` #> `summarise()` has grouped output by 'event_from'. You can override using the #> `.groups` argument."},{"path":"https://s87jackson.github.io/rfars/articles/Rural_roads.html","id":"data","dir":"Articles","previous_headings":"","what":"Data","title":"Rural Roads","text":"Calling get_fars(proceed=TRUE) download data 2015 2020 states, store ‘FARS data’ folder working directory, subfolders raw prepared files. proceed set FALSE, (default) R ask permission downloading files. simplicity, import two years data one state. data hard drive, don’t need download . Calling use_fars() looks working directory prepared FARS files, stacks , brings current environment. make adjustment standard variable definitions label people driving motorcycles motorcyclists rather drivers motorcycles. makes easier refer motorcyclists later. Note myFARS object list, flat tibble containing required variables: body_typ (vehicle body type) per_typ (person type). counts() function makes easy generate specific types counts. create function run two counts, differentiated urbanicity, stack results easy graphing.","code":"get_fars(years = 2019:2020, states = \"VA\", proceed=TRUE) #> Raw data files have been saved to C:/Users/s87ja/Dropbox/Work/toXcel/FARS/rfars/vignettes/FARS data/raw/ #> Preparing the 2019 files................... #> Preparing the 2020 files................... #> Prepared data files have been saved to C:/Users/s87ja/Dropbox/Work/toXcel/FARS/rfars/vignettes/FARS data/prepared/ myFARS <- use_fars() myFARS$flat$per_typ <-    ifelse(grepl(\"motorcycle\",                 myFARS$flat$body_typ,                 ignore.case = TRUE),          \"Motorcyclist\",          myFARS$flat$per_typ) compare_counts <- function(myFARS, what, involved=NULL){      bind_rows(     counts(myFARS, what=what, involved=involved, where=\"rural\") %>%       mutate(where = \"Rural\"),     counts(myFARS, what=what, involved=involved, where=\"urban\") %>%       mutate(where = \"Urban\")     ) %>%   return()    }"},{"path":"https://s87jackson.github.io/rfars/articles/Rural_roads.html","id":"basic-counts","dir":"Articles","previous_headings":"","what":"Basic Counts","title":"Rural Roads","text":"number crashes reasonable starting point. use compare_counts()function ggplot() plot annual count crashes fatalities rural urban areas, 2015 2020.","code":"compare_counts(myFARS, \"crashes\") %>%  ggplot(aes(x=date, y=n, label=scales::comma(n))) +    geom_col() +    geom_label(vjust=1) +   facet_wrap(.~where) +   labs(x=NULL, y=NULL, title = \"Crashes\", fill=NULL) compare_counts(myFARS, \"fatalities\") %>%    ggplot(aes(x=date, y=n, label=scales::comma(n))) +    geom_col() +    geom_label(vjust=1) +   facet_wrap(.~where) +   labs(x=NULL, y=NULL, title = \"Fatalities\", fill=NULL)"},{"path":"https://s87jackson.github.io/rfars/articles/Rural_roads.html","id":"the-involved-argument","dir":"Articles","previous_headings":"","what":"The involved Argument","title":"Rural Roads","text":"counts() makes easy hone specific crash types using involved argument. can : distracted driver, drowsy driver, police pursuit, motorcycle, pedalcyclist, bicyclist, pedestrian, pedbike, young driver, older driver, speeding, alcohol, drugs, hit run, roadway departure, rollover, large trucks. Specifying involved filter counts matching criterion. example involved=\"distracted driver\" return counts associated crashes involving distracted driver. Multiple values can supplied; , resulting counts satisfy criteria. , combined operator (opposed ). loop options available rfars generate simple plots.","code":"crashfactors <- c(\"distracted driver\", \"drowsy driver\",                    \"police pursuit\", \"motorcycle\", \"pedalcyclist\",                    \"bicyclist\", \"pedestrian\", \"pedbike\",                    \"young driver\", \"older driver\", \"speeding\",                    \"alcohol\", \"drugs\", \"hit and run\",                    \"roadway departure\", \"rollover\", \"large trucks\"                   )  for(crashfactor in crashfactors){      p <-      compare_counts(myFARS, \"fatalities\", involved = crashfactor) %>%     ggplot(aes(x=year, y=n, label=scales::comma(n))) +       geom_col(position=\"dodge\") +       facet_wrap(.~where) +       geom_label(position = position_dodge(.9), vjust=1) +       labs(title = paste0(\"Fatalities: \", crashfactor))    print(p)    } #> Note: Young drivers are defined as those between the ages of 15 and 20. #> Warning in mask$eval_all_mutate(quo): NAs introduced by coercion #> Note: Young drivers are defined as those between the ages of 15 and 20. #> Warning in mask$eval_all_mutate(quo): NAs introduced by coercion #> Note: Older drivers are defined as those aged 65+. #> Warning in mask$eval_all_mutate(quo): NAs introduced by coercion #> Note: Older drivers are defined as those aged 65+. #> Warning in mask$eval_all_mutate(quo): NAs introduced by coercion"},{"path":"https://s87jackson.github.io/rfars/articles/Rural_roads.html","id":"the-filteronly-option","dir":"Articles","previous_headings":"","what":"The filterOnly Option","title":"Rural Roads","text":"counts() function filterOnly option, returns pre-summarized data fitting specifications (, , etc.). can useful generating custom counts. example, acc_type (Crash Type) vehicle-level variable. count number crashes acc_type, need prevent -counting (one value acc_type vehicle involved crash). take value associated veh_no 1 (vehicle number 1). reasonable, may appropriate analysis situations.","code":"bind_rows(   counts(myFARS,        what = \"crashes\",        where = \"rural\",        filterOnly = TRUE        ) %>%     filter(veh_no==1) %>% #crash type is on the vehicle-level, this prevents over-counting     select(id, year, acc_type) %>% unique() %>% group_by(acc_type, year) %>% summarize(n=n()) %>%     mutate(where = \"Rural\"),   counts(myFARS,        what = \"crashes\",        where = \"urban\",        filterOnly = TRUE        ) %>%     filter(veh_no==1) %>%     select(id, year, acc_type) %>% unique() %>% group_by(acc_type, year) %>% summarize(n=n()) %>%     mutate(where = \"Urban\")     ) %>%   filter(!is.na(acc_type)) %>%   group_by(where, acc_type) %>% summarize(n=sum(n, na.rm=TRUE)) %>%   tidyr::pivot_wider(names_from = \"where\", values_from = \"n\") %>%   mutate(Total = Urban + Rural,          rural_pct = Rural/Total) %>%   arrange(desc(Total)) %>%   slice(1:20) %>%   arrange(desc(rural_pct)) %>%   mutate(acc_type = reorder(acc_type, rural_pct)) %>%      ggplot(aes(y=acc_type, x=rural_pct, fill=Rural, label=scales::percent(rural_pct, accuracy = 1))) +      geom_col() +      geom_label(hjust=1, fill=\"white\") +   scale_fill_continuous(labels=scales::comma) +     labs(x=NULL, y=NULL,           title = \"20 Most Common Crash Types by Prevalence in Rural Areas\") +     theme(plot.title.position = \"plot\") #> `summarise()` has grouped output by 'acc_type'. You can override using the #> `.groups` argument. #> `summarise()` has grouped output by 'acc_type'. You can override using the #> `.groups` argument. #> `summarise()` has grouped output by 'where'. You can override using the #> `.groups` argument."},{"path":"https://s87jackson.github.io/rfars/articles/Rural_roads.html","id":"the-flat-tibble","dir":"Articles","previous_headings":"","what":"The flat Tibble","title":"Rural Roads","text":"sometimes easiest access data directly, rather counts() function. object created use_fars() list five elements, tibbles: flat, multi_acc, multi_veh, multi_per, events. flat data frame contains 200 variables, can often provide ’s needed. several examples:","code":"myFARS$flat %>%   mutate(     vprofile = ifelse(vprofile %in% c(\"Uphill\", \"Downhill\"), \"Up/downhill\", vprofile),     valign = ifelse(grepl(\"Curve\", valign), \"Curve\", valign)     ) %>%   filter(veh_no == 1, #to avoid over-counting          rur_urb %in% c(\"Rural\", \"Urban\"),          valign %in% c(\"Straight\", \"Curve\"),          !(vprofile %in% c(\"Unknown\", \"Reported as Unknown\", \"Not Reported\"))          ) %>%   select(id, vprofile, valign, rur_urb) %>% unique() %>%   group_by(vprofile, valign, rur_urb) %>%   summarize(n = n()) %>%    ggplot(aes(x=valign, y=vprofile, fill=n, label=scales::comma(n))) +   #geom_tile() +   facet_wrap(.~rur_urb) +   viridis::scale_fill_viridis() +   geom_label() +   labs(title = \"Roadway Profile and Alignment\") #> `summarise()` has grouped output by 'vprofile', 'valign'. You can override #> using the `.groups` argument. myFARS$flat %>%   filter(rur_urb %in% c(\"Rural\", \"Urban\")) %>%   filter(grepl(\"(K)\", inj_sev)) %>%   group_by(rur_urb, per_typ) %>%   summarise(n=n()) %>%   filter(n>2) %>%   mutate(per_typ = stringr::str_wrap(per_typ, 15)) %>%      ggplot(aes(x=per_typ, y=n, fill=rur_urb, label = scales::comma(n))) +     geom_col(position = \"dodge\") +     geom_label(vjust=1, position = position_dodge(.9)) +     labs(title = \"Fatalities by Person Type and Urbanicity\") #> `summarise()` has grouped output by 'rur_urb'. You can override using the #> `.groups` argument. myFARS$flat %>%   filter(rur_urb %in% c(\"Rural\", \"Urban\")) %>%   filter(grepl(\"(K)\", inj_sev)) %>%   group_by(rur_urb, sex) %>%   summarise(n=n()) %>%   filter(n>90) %>%   mutate(sex = stringr::str_wrap(sex, 15)) %>%      ggplot(aes(x=sex, y=n, fill=rur_urb, label = scales::comma(n))) +     geom_col(position = \"dodge\") +     geom_label(vjust=1, position = position_dodge(.9)) +     labs(title = \"Fatalities by Sex and Urbanicity\") #> `summarise()` has grouped output by 'rur_urb'. You can override using the #> `.groups` argument. myFARS$flat %>%   filter(rur_urb %in% c(\"Rural\", \"Urban\")) %>%   filter(grepl(\"(K)\", inj_sev)) %>%   group_by(rur_urb, hispanic) %>%   summarise(n=n()) %>%   filter(n>10) %>%   mutate(hispanic = stringr::str_wrap(hispanic, 15)) %>%      ggplot(aes(x=hispanic, y=n, fill=rur_urb, label = scales::comma(n))) +     geom_col(position = \"dodge\") +     geom_label(vjust=1, position = position_dodge(.9)) +     labs(title = \"Fatalities by Ethnicity and Urbanicity\") #> `summarise()` has grouped output by 'rur_urb'. You can override using the #> `.groups` argument. myFARS$flat %>%   filter(rur_urb %in% c(\"Rural\", \"Urban\")) %>%   filter(grepl(\"(K)\", inj_sev)) %>%   filter(!(per_typ %in% c(\"Bicyclist\", \"Pedestrian\"))) %>%   group_by(rur_urb, body_typ) %>%   summarise(n=n()) %>%   filter(n>30) %>%   mutate(body_typ = stringr::str_wrap(body_typ, 80)) %>%    ggplot(aes(y=body_typ, x=n, fill=rur_urb, label=scales::comma(n, accuracy = 1))) +      geom_col(position = \"dodge\") +      geom_label(hjust=1, position = position_dodge(.9)) +     labs(title = \"Fatalities by Vehicle Type and Urbanicity\") #> `summarise()` has grouped output by 'rur_urb'. You can override using the #> `.groups` argument. myFARS$flat %>%   filter(grepl(\"(K)\", inj_sev),           rur_urb %in% c(\"Rural\", \"Urban\")) %>%   mutate(age_n = gsub(\"\\\\D+\",\"\", age) %>% as.numeric()) %>%   group_by(rur_urb, age_n) %>% summarize(n=n()) %>%      ggplot(aes(x=age_n, y=n, color = rur_urb)) +     geom_line() +     labs(title = \"Fatalities by Age and Urbanicity\") #> `summarise()` has grouped output by 'rur_urb'. You can override using the #> `.groups` argument. #> Warning: Removed 2 row(s) containing missing values (geom_path). myFARS$flat %>%   mutate(age_n = gsub(\"\\\\D+\",\"\", age) %>% as.numeric()) %>%   filter(grepl(\"(K)\", inj_sev),          rur_urb %in% c(\"Rural\", \"Urban\"),          hour < 25,          age_n <= 90) %>%   group_by(rur_urb, age_n, hour) %>% summarize(n=n()) %>%      ggplot(aes(x=hour, y=age_n, fill=n)) +     geom_tile() +     facet_wrap(.~rur_urb) +     viridis::scale_fill_viridis() +     labs(title = \"Fatalities by Age, Time of Day, and Urbanicity\") #> `summarise()` has grouped output by 'rur_urb', 'age_n'. You can override using #> the `.groups` argument."},{"path":"https://s87jackson.github.io/rfars/articles/Rural_roads.html","id":"the-multi_per-tibble","dir":"Articles","previous_headings":"","what":"The multi_per Tibble","title":"Rural Roads","text":"flat tibble required information, may one multi_ tibbles. , access multi_per tibble visualize fatalities race.","code":"myFARS$multi_per %>%    filter(name == \"race\") %>%   select(state, st_case, veh_no, per_no, year, race=value) %>%   inner_join(myFARS$flat) %>%      filter(rur_urb %in% c(\"Rural\", \"Urban\")) %>%   filter(grepl(\"(K)\", inj_sev)) %>%   group_by(rur_urb, race) %>%   summarise(n=n()) %>%   filter(n>9) %>%   mutate(race = stringr::str_wrap(race, 15)) %>%      ggplot(aes(x=race, y=n, fill=rur_urb, label = scales::comma(n))) +     geom_col(position = \"dodge\") +     geom_label(vjust=1, position = position_dodge(.9)) #> Joining, by = c(\"state\", \"st_case\", \"veh_no\", \"per_no\", \"year\") #> `summarise()` has grouped output by 'rur_urb'. You can override using the #> `.groups` argument."},{"path":"https://s87jackson.github.io/rfars/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Steve Jackson. Author, maintainer.","code":""},{"path":"https://s87jackson.github.io/rfars/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Jackson S (2022). rfars: Download Analyze Fatal Crash Data. R package version 0.1.0, https://github.com/s87jackson/rfars.","code":"@Manual{,   title = {rfars: Download and Analyze Fatal Crash Data},   author = {Steve Jackson},   year = {2022},   note = {R package version 0.1.0},   url = {https://github.com/s87jackson/rfars}, }"},{"path":"https://s87jackson.github.io/rfars/index.html","id":"rfars","dir":"","previous_headings":"","what":"Download and Analyze Fatal Crash Data","title":"Download and Analyze Fatal Crash Data","text":"goal rfars simplify process analyzing FARS data. FARS stands Fatality Analysis Reporting System, census fatal crashes United States maintained National Highway Traffic Safety Administration. Fatality Injury Reporting System Tool allows users generate queries, can produce simple tables graphs. suffices simple analysis, often leaves researchers wanting . Digging deeper, however, involves time-consuming process downloading annual ZIP files attempting stitch together - first combing immense data dictionary determine required variables table names. rfars allows users download FARS data back 2016 just two lines code. result full, rich dataset ready mapping, modeling, downstream analysis. Helper functions also provided produce common counts comparisons. companion package rfarsplus (currently development) provide exposure data facilitate calculation various rates.","code":""},{"path":"https://s87jackson.github.io/rfars/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Download and Analyze Fatal Crash Data","text":"can install latest version rfars GitHub : load required packages:","code":"# install.packages(\"devtools\") devtools::install_github(\"s87jackson/rfars\")"},{"path":"https://s87jackson.github.io/rfars/index.html","id":"getting-and-using-fars-data","dir":"","previous_headings":"","what":"Getting and Using FARS Data","title":"Download and Analyze Fatal Crash Data","text":"Use get_fars() function download ZIP files NHTSA save prepared files hard drive. run defaults saving everything current working directory. import available data state Virginia. Note get_fars() requires permission download ZIP files store prepared CSVs locally, unless set proceed=TRUE. use_fars() function looks specified directory (working directory default) certain CSV files compiles list five tibbles: flat, multi_acc, multi_veh, multi_per, events. flat tibble contains variables just one value per person, vehicle, crash (e.g., age, travel speed, lighting). row corresponds person involved crash. may multiple people /vehicles involved one crash, variable-values repeated within crash vehicle. crash uniquely identified id, combination year st_case. Note st_case unique across years, example, st_case 510001 appear year. id variable attempts avoid issue. multi_ tibbles contain variables may varying number values entity (e.g., driver impairments, vehicle events, weather conditions time crash). tibble requisite data elements corresponding entity: multi_acc includes st_case year, multi_veh adds veh_no (vehicle number), multi_per adds per_no (person number). events tibble provides sequence numbered events vehicle crash. can review list variables help guide analysis :","code":"get_fars(states=\"VA\", proceed=TRUE) #> Raw data files have been saved to C:/Users/s87ja/Dropbox/Work/toXcel/FARS/rfars/FARS data/raw/ #> Preparing the 2015 files................... #> Preparing the 2016 files................... #> Preparing the 2017 files................... #> Preparing the 2018 files................... #> Preparing the 2019 files................... #> Preparing the 2020 files................... #> Prepared data files have been saved to C:/Users/s87ja/Dropbox/Work/toXcel/FARS/rfars/FARS data/prepared/ myFARS <- use_fars() str(myFARS) #> List of 5 #>  $ flat     : tibble [10,150 × 196] (S3: tbl_df/tbl/data.frame) #>   ..$ year         : num [1:10150] 2015 2015 2015 2015 2015 ... #>   ..$ state        : chr [1:10150] \"Virginia\" \"Virginia\" \"Virginia\" \"Virginia\" ... #>   ..$ st_case      : num [1:10150] 510001 510002 510002 510003 510004 ... #>   ..$ id           : num [1:10150] 2.02e+09 2.02e+09 2.02e+09 2.02e+09 2.02e+09 ... #>   ..$ veh_no       : num [1:10150] 1 0 1 1 1 2 2 1 1 1 ... #>   ..$ per_no       : num [1:10150] 1 1 1 1 1 1 2 1 1 2 ... #>   ..$ county       : chr [1:10150] \"143\" \"840\" \"840\" \"185\" ... #>   ..$ city         : chr [1:10150] \"0\" \"2640\" \"2640\" \"0\" ... #>   ..$ lon          : num [1:10150] -79.2 -78.2 -78.2 -81.8 -79.3 ... #>   ..$ lat          : num [1:10150] 37 39.2 39.2 37 37.1 ... #>   ..$ ve_total     : num [1:10150] 1 1 1 1 2 2 2 1 1 1 ... #>   ..$ ve_forms     : num [1:10150] 1 1 1 1 2 2 2 1 1 1 ... #>   ..$ pvh_invl     : num [1:10150] 0 0 0 0 0 0 0 0 0 0 ... #>   ..$ peds         : num [1:10150] 0 1 1 0 0 0 0 0 0 0 ... #>   ..$ persons      : num [1:10150] 1 1 1 1 3 3 3 1 2 2 ... #>   ..$ permvit      : num [1:10150] 1 1 1 1 3 3 3 1 2 2 ... #>   ..$ pernotmvit   : num [1:10150] 0 1 1 0 0 0 0 0 0 0 ... #>   ..$ day          : num [1:10150] 1 2 2 2 4 4 4 3 6 6 ... #>   ..$ month        : chr [1:10150] \"January\" \"January\" \"January\" \"January\" ... #>   ..$ day_week     : chr [1:10150] \"Thursday\" \"Friday\" \"Friday\" \"Friday\" ... #>   ..$ hour         : num [1:10150] 15 18 18 13 15 15 15 7 1 1 ... #>   ..$ minute       : num [1:10150] 30 59 59 55 15 15 15 58 19 19 ... #>   ..$ nhs          : chr [1:10150] \"This section IS NOT on the NHS\" \"This section IS NOT on the NHS\" \"This section IS NOT on the NHS\" \"This section IS NOT on the NHS\" ... #>   ..$ route        : chr [1:10150] \"County Road\" \"Unknown\" \"Unknown\" \"County Road\" ... #>   ..$ tway_id      : chr [1:10150] \"CR-668\" \"HANDLEY BLVD\" \"HANDLEY BLVD\" \"CR-609\" ... #>   ..$ tway_id2     : chr [1:10150] NA \"S STEWARD ST\" \"S STEWARD ST\" NA ... #>   ..$ rur_urb      : chr [1:10150] \"Rural\" \"Urban\" \"Urban\" \"Rural\" ... #>   ..$ func_sys     : chr [1:10150] \"Major Collector\" \"Local\" \"Local\" \"Major Collector\" ... #>   ..$ rd_owner     : chr [1:10150] \"State Highway Agency\" \"Not Reported\" \"Not Reported\" \"State Highway Agency\" ... #>   ..$ milept       : chr [1:10150] \"68\" \"None\" \"None\" \"87\" ... #>   ..$ sp_jur       : chr [1:10150] \"No Special Jurisdiction\" \"No Special Jurisdiction\" \"No Special Jurisdiction\" \"No Special Jurisdiction\" ... #>   ..$ harm_ev      : chr [1:10150] \"Other Post, Other Pole or Other Supports\" \"Pedalcyclist\" \"Pedalcyclist\" \"Rollover/Overturn\" ... #>   ..$ man_coll     : chr [1:10150] \"Not a Collision with Motor Vehicle In-Transport\" \"Not a Collision with Motor Vehicle In-Transport\" \"Not a Collision with Motor Vehicle In-Transport\" \"Not a Collision with Motor Vehicle In-Transport\" ... #>   ..$ reljct1      : chr [1:10150] \"No\" \"No\" \"No\" \"No\" ... #>   ..$ reljct2      : chr [1:10150] \"Non-Junction\" \"Intersection\" \"Intersection\" \"Non-Junction\" ... #>   ..$ typ_int      : chr [1:10150] \"Not an Intersection\" \"T-Intersection\" \"T-Intersection\" \"Not an Intersection\" ... #>   ..$ wrk_zone     : chr [1:10150] \"None\" \"None\" \"None\" \"None\" ... #>   ..$ rel_road     : chr [1:10150] \"On Roadside\" \"On Roadway\" \"On Roadway\" \"Outside Trafficway\" ... #>   ..$ lgt_cond     : chr [1:10150] \"Daylight\" \"Dark - Lighted\" \"Dark - Lighted\" \"Daylight\" ... #>   ..$ sch_bus      : chr [1:10150] \"No\" \"No\" \"No\" \"No\" ... #>   ..$ rail         : chr [1:10150] \"Not Applicable\" \"Not Applicable\" \"Not Applicable\" \"Not Applicable\" ... #>   ..$ not_hour     : num [1:10150] 99 19 19 13 99 99 99 99 1 1 ... #>   ..$ not_min      : num [1:10150] 99 0 0 59 99 99 99 99 25 25 ... #>   ..$ arr_hour     : num [1:10150] 99 19 19 14 99 99 99 99 1 1 ... #>   ..$ arr_min      : num [1:10150] 99 5 5 8 99 99 99 99 30 30 ... #>   ..$ hosp_hr      : num [1:10150] 99 19 19 14 99 99 99 88 1 1 ... #>   ..$ hosp_mn      : num [1:10150] 99 20 20 36 99 99 99 88 42 42 ... #>   ..$ fatals       : num [1:10150] 1 1 1 1 1 1 1 1 1 1 ... #>   ..$ drunk_dr     : num [1:10150] 1 0 0 0 1 1 1 0 0 0 ... #>   ..$ str_veh      : num [1:10150] 0 1 0 0 0 0 0 0 0 0 ... #>   ..$ age          : chr [1:10150] \"70 Years\" \"59 Years\" \"68 Years\" \"62 Years\" ... #>   ..$ sex          : chr [1:10150] \"Male\" \"Female\" \"Female\" \"Female\" ... #>   ..$ per_typ      : chr [1:10150] \"Driver of a Motor Vehicle In-Transport\" \"Bicyclist\" \"Driver of a Motor Vehicle In-Transport\" \"Driver of a Motor Vehicle In-Transport\" ... #>   ..$ inj_sev      : chr [1:10150] \"Fatal Injury (K)\" \"Fatal Injury (K)\" \"No Apparent Injury (O)\" \"Fatal Injury (K)\" ... #>   ..$ seat_pos     : chr [1:10150] \"Front Seat, Left Side\" \"Not a Motor Vehicle Occupant\" \"Front Seat, Left Side\" \"Front Seat, Left Side\" ... #>   ..$ rest_use     : chr [1:10150] \"None Used\" \"Not a Motor Vehicle Occupant\" \"Shoulder and Lap Belt Used\" \"Shoulder and Lap Belt Used\" ... #>   ..$ rest_mis     : chr [1:10150] \"No\" \"Not a Motor Vehicle Occupant\" \"No\" \"No\" ... #>   ..$ air_bag      : chr [1:10150] \"Deployed- Front\" \"Not a Motor Vehicle Occupant\" \"Not Deployed\" \"Not Deployed\" ... #>   ..$ ejection     : chr [1:10150] \"Not Ejected\" \"Not Applicable\" \"Not Ejected\" \"Not Ejected\" ... #>   ..$ ej_path      : chr [1:10150] \"Ejection Path Not Applicable\" \"Ejection Path Not Applicable\" \"Ejection Path Not Applicable\" \"Ejection Path Not Applicable\" ... #>   ..$ extricat     : chr [1:10150] \"Not Extricated or Not Applicable\" \"Not Extricated or Not Applicable\" \"Not Extricated or Not Applicable\" \"Not Extricated or Not Applicable\" ... #>   ..$ drinking     : chr [1:10150] \"No (Alcohol Not Involved)\" \"Unknown (Police Reported)\" \"No (Alcohol Not Involved)\" \"No (Alcohol Not Involved)\" ... #>   ..$ alc_det      : chr [1:10150] \"Not Reported\" \"Not Reported\" \"Not Reported\" \"Not Reported\" ... #>   ..$ alc_status   : chr [1:10150] \"Test Given\" \"Test Given\" \"Test Given\" \"Test Not Given\" ... #>   ..$ atst_typ     : chr [1:10150] \"Blood\" \"Blood\" \"Blood\" \"Test Not Given\" ... #>   ..$ alc_res      : chr [1:10150] \"0.105 % BAC\" \"0.000 % BAC\" \"0.000 % BAC\" \"Test Not Given\" ... #>   ..$ drugs        : chr [1:10150] \"No (drugs not involved)\" \"Unknown\" \"No (drugs not involved)\" \"No (drugs not involved)\" ... #>   ..$ drug_det     : chr [1:10150] \"Not Reported\" \"Not Reported\" \"Not Reported\" \"Not Reported\" ... #>   ..$ dstatus      : chr [1:10150] \"Test Given\" \"Test Given\" \"Test Given\" \"Test Not Given\" ... #>   ..$ hospital     : chr [1:10150] \"EMS Unknown Mode\" \"EMS Unknown Mode\" \"Not Transported\" \"EMS Unknown Mode\" ... #>   ..$ doa          : chr [1:10150] \"Not Applicable\" \"Not Applicable\" \"Not Applicable\" \"Not Applicable\" ... #>   ..$ death_da     : chr [1:10150] \"1\" \"2\" \"Not Applicable (Non-Fatal)\" \"5\" ... #>   ..$ death_mo     : chr [1:10150] \"January\" \"January\" \"Not Applicable (Non-Fatal)\" \"January\" ... #>   ..$ death_yr     : chr [1:10150] \"2015\" \"2015\" \"Not Applicable (Non-fatal)\" \"2015\" ... #>   ..$ death_hr     : num [1:10150] 17 19 88 20 15 88 88 8 1 88 ... #>   ..$ death_mn     : num [1:10150] 51 39 88 15 37 88 88 24 45 88 ... #>   ..$ death_tm     : chr [1:10150] \"1751\" \"1939\" \"8888\" \"2015\" ... #>   ..$ lag_hrs      : num [1:10150] 2 0 999 78 0 999 999 0 0 999 ... #>   ..$ lag_mins     : num [1:10150] 21 40 99 20 22 99 99 26 26 99 ... #>   ..$ work_inj     : chr [1:10150] \"No\" \"No\" \"Not Applicable (not a fatality)\" \"No\" ... #>   ..$ hispanic     : chr [1:10150] \"Non-Hispanic\" \"Non-Hispanic\" \"Not A Fatality (not Applicable)\" \"Non-Hispanic\" ... #>   ..$ location     : chr [1:10150] \"Occupant of a Motor Vehicle\" \"At Intersection - Not In Crosswalk\" \"Occupant of a Motor Vehicle\" \"Occupant of a Motor Vehicle\" ... #>   ..$ numoccs      : chr [1:10150] \"01\" NA \"01\" \"01\" ... #>   ..$ unittype     : chr [1:10150] \"Motor Vehicle In-Transport (Inside or Outside the Trafficway)\" NA \"Motor Vehicle In-Transport (Inside or Outside the Trafficway)\" \"Motor Vehicle In-Transport (Inside or Outside the Trafficway)\" ... #>   ..$ hit_run      : chr [1:10150] \"No\" NA \"No\" \"No\" ... #>   ..$ reg_stat     : chr [1:10150] \"Virginia\" NA \"Virginia\" \"Virginia\" ... #>   ..$ owner        : chr [1:10150] \"Driver (in this crash) was  Registered Owner\" NA \"Driver (in this crash) was  Registered Owner\" \"Driver (in this crash) was  Registered Owner\" ... #>   ..$ make         : chr [1:10150] \"Volvo\" NA \"Ford\" \"Chevrolet\" ... #>   ..$ model        : num [1:10150] 43 NA 401 16 38 39 39 481 404 404 ... #>   ..$ mak_mod      : chr [1:10150] \"Volvo 70 Series (For XC70 for 2014 on, use model code 402)\" NA \"Ford Bronco (thru 1977)/Bronco II/Explorer/Explorer Sport\" \"Chevrolet Cavalier\" ... #>   ..$ body_typ     : chr [1:10150] \"Station Wagon (excluding van and truck based)\" NA \"Compact Utility (Utility Vehicle Categories \\\"Small\\\" and \\\"Midsize\\\")\" \"2-door sedan,hardtop,coupe\" ... #>   ..$ mod_year     : chr [1:10150] \"2001\" NA \"2004\" \"1999\" ... #>   ..$ vin          : chr [1:10150] \"YV1SZ58D1110\" NA \"1FMZU73W64ZA\" \"1G1JC1246X72\" ... #>   ..$ tow_veh      : chr [1:10150] \"No Trailing Units\" NA \"No Trailing Units\" \"No Trailing Units\" ... #>   ..$ j_knife      : chr [1:10150] \"Not an Articulated Vehicle\" NA \"Not an Articulated Vehicle\" \"Not an Articulated Vehicle\" ... #>   ..$ mcarr_i1     : chr [1:10150] \"Not Applicable\" NA \"Not Applicable\" \"Not Applicable\" ... #>   ..$ mcarr_i2     : chr [1:10150] \"Not Applicable\" NA \"Not Applicable\" \"Not Applicable\" ... #>   ..$ mcarr_id     : chr [1:10150] \"Not Applicable\" NA \"Not Applicable\" \"Not Applicable\" ... #>   ..$ v_config     : chr [1:10150] \"Not Applicable\" NA \"Not Applicable\" \"Not Applicable\" ... #>   .. [list output truncated] #>  $ multi_acc:'data.frame':   9939 obs. of  5 variables: #>   ..$ state  : chr [1:9939] \"Virginia\" \"Virginia\" \"Virginia\" \"Virginia\" ... #>   ..$ st_case: num [1:9939] 510001 510001 510002 510002 510003 ... #>   ..$ name   : chr [1:9939] \"weather\" \"weather\" \"weather\" \"weather\" ... #>   ..$ value  : chr [1:9939] \"Clear\" \"Cloudy\" \"Clear\" \"Cloudy\" ... #>   ..$ year   : num [1:9939] 2015 2015 2015 2015 2015 ... #>  $ multi_veh:'data.frame':   92933 obs. of  6 variables: #>   ..$ state  : chr [1:92933] \"Virginia\" \"Virginia\" \"Virginia\" \"Virginia\" ... #>   ..$ st_case: num [1:92933] 510001 510002 510003 510004 510004 ... #>   ..$ veh_no : num [1:92933] 1 1 1 1 2 1 1 1 1 1 ... #>   ..$ name   : chr [1:92933] \"vehiclesf\" \"vehiclesf\" \"vehiclesf\" \"vehiclesf\" ... #>   ..$ value  : chr [1:92933] \"None\" \"None\" \"None\" \"None\" ... #>   ..$ year   : num [1:92933] 2015 2015 2015 2015 2015 ... #>  $ multi_per:'data.frame':   56963 obs. of  7 variables: #>   ..$ state  : chr [1:56963] \"Virginia\" \"Virginia\" \"Virginia\" \"Virginia\" ... #>   ..$ st_case: num [1:56963] 510001 510002 510002 510003 510004 ... #>   ..$ veh_no : num [1:56963] 1 0 1 1 1 2 2 1 1 1 ... #>   ..$ per_no : num [1:56963] 1 1 1 1 1 1 2 1 1 2 ... #>   ..$ name   : chr [1:56963] \"race\" \"race\" \"race\" \"race\" ... #>   ..$ value  : chr [1:56963] \"White\" \"White\" \"Not a Fatality (not Applicable)\" \"White\" ... #>   ..$ year   : num [1:56963] 2015 2015 2015 2015 2015 ... #>  $ events   :'data.frame':   16162 obs. of  7 variables: #>   ..$ state    : chr [1:16162] \"Virginia\" \"Virginia\" \"Virginia\" \"Virginia\" ... #>   ..$ st_case  : num [1:16162] 510001 510001 510001 510001 510001 ... #>   ..$ veh_no   : num [1:16162] 1 1 1 1 1 1 1 1 1 1 ... #>   ..$ veventnum: num [1:16162] 1 2 3 4 5 1 1 2 3 4 ... #>   ..$ soe      : chr [1:16162] \"Ran Off Roadway - Right\" \"Re-entering Roadway\" \"Ran Off Roadway - Left\" \"Other Post, Other Pole or Other Supports\" ... #>   ..$ aoi      : chr [1:16162] \"Non-Harmful Event\" \"Non-Harmful Event\" \"Non-Harmful Event\" \"11 Clock Point\" ... #>   ..$ year     : num [1:16162] 2015 2015 2015 2015 2015 ... #>  - attr(*, \"class\")= chr [1:2] \"list\" \"FARS\" View(fars_varnames)"},{"path":"https://s87jackson.github.io/rfars/index.html","id":"counts","dir":"","previous_headings":"","what":"Counts","title":"Download and Analyze Fatal Crash Data","text":"first step many transportation safety analyses involves counting number relevant crashes, fatalities, people involved. counts() lets users specify count, count (rural/urban /specified states), include, years include aggregation interval (annually monthly), factors involved crash. returns simple tibble can easily piped ggplot() quickly visualize counts.     can combine two counts() results make comparison. compare number speeding-related fatalities rural urban Virginia:","code":"counts(   myFARS,   what = \"crashes\",   interval = c(\"year\")   ) %>%   ggplot(aes(x=date, y=n, label=scales::comma(n))) +      geom_col() +      geom_label(vjust=1.2) +     labs(x=NULL, y=NULL, title = \"Fatal Crashes in Virginia\") counts(   myFARS,   what = \"fatalities\",   interval = c(\"year\")   ) %>%   ggplot(aes(x=date, y=n, label=scales::comma(n))) +      geom_col() +      geom_label(vjust=1.2) +     labs(x=NULL, y=NULL, title = \"Fatalities in Virginia\") counts(myFARS,        what = \"fatalities\",        where = \"rural\",        interval = c(\"year\")        ) %>%   ggplot(aes(x=date, y=n, label=scales::comma(n))) +      geom_col() +      geom_label(vjust=1.2) +     labs(x=NULL, y=NULL, title = \"Rural Fatalities in Virginia\") counts(myFARS,        what = \"fatalities\",        where = \"rural\",        interval = c(\"year\"),        involved = \"speeding\"        ) %>%   ggplot(aes(x=date, y=n, label=scales::comma(n))) +      geom_col() +      geom_label(vjust=1.2) +     labs(x=NULL, y=NULL, title = \"Speeding-Related Fatalities\\nin Rural Virginia\") bind_rows(   counts(myFARS,        what = \"fatalities\",        where = \"rural\",        interval = c(\"year\"),        involved = \"speeding\"        ) %>%     mutate(where = \"Rural\"),   counts(myFARS,        what = \"fatalities\",        where = \"urban\",        interval = c(\"year\"),        involved = \"speeding\"        ) %>%     mutate(where = \"Urban\")     ) %>%   ggplot(aes(x=date, y=n, label=scales::comma(n))) +      geom_col() +      geom_label(vjust=1.2) +     facet_wrap(.~where) +     labs(x=NULL, y=NULL, title = \"Speeding-Related Fatalities in Virginia\", fill=NULL)"},{"path":"https://s87jackson.github.io/rfars/index.html","id":"mapping","dir":"","previous_headings":"","what":"Mapping","title":"Download and Analyze Fatal Crash Data","text":"can take advantage access full data maps. map pedestrian bicyclist fatalities Virginia:  Drug-related crashes:  Young drivers:","code":"counts(   myFARS,    what = \"crashes\",    involved = \"pedbike\",    filterOnly = TRUE   ) %>% leaflet() %>%   addTiles() %>%   addHeatmap(group = \"Heatmap\", radius=10, blur=20, minOpacity = .01, max = .2, cellSize = 1) %>%   addCircleMarkers(     radius = 1,     color = \"red\",     stroke = FALSE,     fillOpacity = 0.7, group = \"Crash Locations\")  #> Assuming \"lon\" and \"lat\" are longitude and latitude, respectively #> Assuming \"lon\" and \"lat\" are longitude and latitude, respectively counts(   myFARS,    what = \"crashes\",    involved = \"drugs\",    filterOnly = TRUE   ) %>%   filter(!is.na(lat), !is.na(lon)) %>% leaflet() %>%   addTiles() %>%   addHeatmap(group = \"Heatmap\", radius=10, blur=20, minOpacity = .01, max = .2, cellSize = 1) %>%   addCircleMarkers(     radius = 1,     color = \"red\",     stroke = FALSE,     fillOpacity = 0.7, group = \"Crash Locations\")  #> Assuming \"lon\" and \"lat\" are longitude and latitude, respectively #> Assuming \"lon\" and \"lat\" are longitude and latitude, respectively counts(   myFARS,    what = \"crashes\",    involved = \"young driver\",    filterOnly = TRUE   ) %>%   filter(!is.na(lat), !is.na(lon)) %>% leaflet() %>%   addTiles() %>%   addHeatmap(group = \"Heatmap\", radius=10, blur=20, minOpacity = .01, max = .2, cellSize = 1) %>%   addCircleMarkers(     radius = 1,     color = \"red\",     stroke = FALSE,     fillOpacity = 0.7, group = \"Crash Locations\")  #> Note: Young drivers are defined as those between the ages of 15 and 20. #> Warning in mask$eval_all_mutate(quo): NAs introduced by coercion #> Assuming \"lon\" and \"lat\" are longitude and latitude, respectively #> Assuming \"lon\" and \"lat\" are longitude and latitude, respectively"},{"path":"https://s87jackson.github.io/rfars/index.html","id":"modeling","dir":"","previous_headings":"","what":"Modeling","title":"Download and Analyze Fatal Crash Data","text":"access full dataset also allows us develop statistical models. fit simple model injury severity function age restraint use. tells us average severity score among motor vehicle drivers occupants wearing seatbelts (lap shoulder belts) 1.7 (close , less “Suspected Minor Injury (B)”). Partial seatbelt use increases predicted score 2.1 (slightly “Suspected Minor Injury (B)”). wearing seatbelt, however increases predicted score 3.2 (slightly “Suspected Serious Injury ()”).","code":"# table(myFARS$flat$inj_sev) # table(myFARS$flat$rest_use, useNA = \"ifany\") # table(myFARS$flat$per_typ, useNA = \"ifany\")  myFARS$flat %>%   filter(rest_use %in% c(\"Lap Belt Only Used\",                          \"Shoulder Belt Only Used\",                          \"None Used / Not Applicable\",                          \"None Used/Not Applicable\",                          \"Shoulder and Lap Belt Used\"),          per_typ %in% c(\"Driver of a Motor Vehicle In-Transport\",                         \"Passenger of a Motor Vehicle In-Transport\")          ) %>%   mutate(     rest_use = case_when(       rest_use %in% c(\"Lap Belt Only Used\", \"Shoulder Belt Only Used\") ~ \"Partial\",       rest_use %in% c(\"None Used / Not Applicable\", \"None Used/Not Applicable\") ~ \"None\",       rest_use %in% c(\"Shoulder and Lap Belt Used\") ~ \"Full\",       TRUE ~ \"Unknown\"       ) %>%       as.factor() %>%       relevel(ref = \"Full\"),     kabco = case_when(       inj_sev == \"Fatal Injury (K)\" ~ 4,       inj_sev %in% c(\"Suspected Serious Injury (A)\",                       \"Suspected Serious Injury(A)\") ~ 3,       inj_sev %in% c(\"Suspected Minor Injury (B)\",                       \"Suspected Minor Injury(B)\") ~ 2,       inj_sev == \"Possible Injury (C)\" ~ 1,       inj_sev == \"No Apparent Injury (O)\" ~ 0,       TRUE ~ as.numeric(NA)       ),     age_n = gsub(\"\\\\D+\",\"\", age) %>% as.numeric()) %>%   lm(kabco ~ age_n + rest_use, data = .) %>%   summary() #>  #> Call: #> lm(formula = kabco ~ age_n + rest_use, data = .) #>  #> Residuals: #>     Min      1Q  Median      3Q     Max  #> -3.9365 -1.2017  0.2468  1.0656  2.2673  #>  #> Coefficients: #>                  Estimate Std. Error t value Pr(>|t|)     #> (Intercept)     1.6777025  0.0420932  39.857  < 2e-16 *** #> age_n           0.0091662  0.0008356  10.969  < 2e-16 *** #> rest_useNone    1.5072070  0.0368817  40.866  < 2e-16 *** #> rest_usePartial 0.4320574  0.1496019   2.888  0.00389 **  #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> Residual standard error: 1.412 on 7179 degrees of freedom #>   (45 observations deleted due to missingness) #> Multiple R-squared:  0.1926, Adjusted R-squared:  0.1922  #> F-statistic: 570.8 on 3 and 7179 DF,  p-value: < 2.2e-16"},{"path":"https://s87jackson.github.io/rfars/reference/alcohol.html","id":null,"dir":"Reference","previous_headings":"","what":"(Internal) Find crashes involving alcohol — alcohol","title":"(Internal) Find crashes involving alcohol — alcohol","text":"internal functions take FARS object created use_fars look     various cases, distracted drowsy drivers.","code":""},{"path":"https://s87jackson.github.io/rfars/reference/alcohol.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"(Internal) Find crashes involving alcohol — alcohol","text":"","code":"alcohol(FARS)"},{"path":"https://s87jackson.github.io/rfars/reference/alcohol.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"(Internal) Find crashes involving alcohol — alcohol","text":"FARS FARS data object searched.","code":""},{"path":"https://s87jackson.github.io/rfars/reference/bicyclist.html","id":null,"dir":"Reference","previous_headings":"","what":"(Internal) Find crashes involving bicyclists — bicyclist","title":"(Internal) Find crashes involving bicyclists — bicyclist","text":"internal functions take FARS object created use_fars look     various cases, distracted drowsy drivers.","code":""},{"path":"https://s87jackson.github.io/rfars/reference/bicyclist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"(Internal) Find crashes involving bicyclists — bicyclist","text":"","code":"bicyclist(FARS)"},{"path":"https://s87jackson.github.io/rfars/reference/bicyclist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"(Internal) Find crashes involving bicyclists — bicyclist","text":"FARS FARS data object searched.","code":""},{"path":"https://s87jackson.github.io/rfars/reference/counts.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a variety of counts from FARS data — counts","title":"Generate a variety of counts from FARS data — counts","text":"Generate variety counts FARS data","code":""},{"path":"https://s87jackson.github.io/rfars/reference/counts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a variety of counts from FARS data — counts","text":"","code":"counts(   FARS,   what = \"crashes\",   years = NULL,   interval = \"year\",   where = NULL,   who = NULL,   involved = NULL,   filterOnly = FALSE )"},{"path":"https://s87jackson.github.io/rfars/reference/counts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a variety of counts from FARS data — counts","text":"FARS input FARS data flat multi components. count: crashes, fatalities, people involved. years years count. interval interval count: months years. count: can specify rural/urban /state (e.g., = \"rural Virginia\", = \"rural\", = \"North Carolina\") type person count: driver, passenger, pedestrian, bicyclist, motorcyclist. involved Factors involved crash. Can : distracted driver, drowsy driver, police pursuit, motorcycle, pedalcyclist, bicyclist, pedestrian, pedbike, young driver, older driver, speeding, alcohol, drugs, hit run, roadway departure, rollover, large trucks. filterOnly Logical, whether filter reduce counts.","code":""},{"path":"https://s87jackson.github.io/rfars/reference/counts.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate a variety of counts from FARS data — counts","text":"...","code":""},{"path":"https://s87jackson.github.io/rfars/reference/counts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a variety of counts from FARS data — counts","text":"","code":"if (FALSE) { get_fars(years = 2016:2020, states=\"Virginia\") %>%   use_fars()   counts(     what = \"fatalities\",     years = 2015:2020,     who = c(\"bicyclists\", \"pedestrians\"),     where = \"urban\"     ) %>%   ggplot(aes(x=date, y=n, label=scales::comma(n))) + geom_col() + geom_label()   }"},{"path":"https://s87jackson.github.io/rfars/reference/distracted_driver.html","id":null,"dir":"Reference","previous_headings":"","what":"(Internal) Find crashes involving distracted drivers — distracted_driver","title":"(Internal) Find crashes involving distracted drivers — distracted_driver","text":"internal functions take FARS object created use_fars look     various cases, distracted drowsy drivers.","code":""},{"path":"https://s87jackson.github.io/rfars/reference/distracted_driver.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"(Internal) Find crashes involving distracted drivers — distracted_driver","text":"","code":"distracted_driver(FARS)"},{"path":"https://s87jackson.github.io/rfars/reference/distracted_driver.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"(Internal) Find crashes involving distracted drivers — distracted_driver","text":"FARS FARS data object searched.","code":""},{"path":"https://s87jackson.github.io/rfars/reference/download_fars.html","id":null,"dir":"Reference","previous_headings":"","what":"Download FARS data files — download_fars","title":"Download FARS data files — download_fars","text":"Download annual files directly NHTSA unzip     newly created ~/FARS data/raw directory.","code":""},{"path":"https://s87jackson.github.io/rfars/reference/download_fars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download FARS data files — download_fars","text":"","code":"download_fars(years, save_dir = getwd(), proceed = FALSE)"},{"path":"https://s87jackson.github.io/rfars/reference/download_fars.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download FARS data files — download_fars","text":"years Years downloaded, yyyy (character numeric formats), currently limited 2016-2020 save_dir Directory store files proceed Logical, downloading proceed without user's permission (set FALSE default).","code":""},{"path":"https://s87jackson.github.io/rfars/reference/download_fars.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download FARS data files — download_fars","text":"Returns location raw data data (save_dir/FARS data/raw),     intended piped prep_fars","code":""},{"path":"https://s87jackson.github.io/rfars/reference/download_fars.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Download FARS data files — download_fars","text":"Raw files downloaded NHTSA     stored save_dir/FARS data/raw/","code":""},{"path":[]},{"path":"https://s87jackson.github.io/rfars/reference/download_fars.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download FARS data files — download_fars","text":"","code":"if (FALSE) { download_fars(c(\"2019\", \"2020\")) download_fars(2011:2020, proceed=TRUE) }"},{"path":"https://s87jackson.github.io/rfars/reference/drowsy_driver.html","id":null,"dir":"Reference","previous_headings":"","what":"(Internal) Find crashes involving drowsy drivers — drowsy_driver","title":"(Internal) Find crashes involving drowsy drivers — drowsy_driver","text":"internal functions take FARS object created use_fars look     various cases, distracted drowsy drivers.","code":""},{"path":"https://s87jackson.github.io/rfars/reference/drowsy_driver.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"(Internal) Find crashes involving drowsy drivers — drowsy_driver","text":"","code":"drowsy_driver(FARS)"},{"path":"https://s87jackson.github.io/rfars/reference/drowsy_driver.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"(Internal) Find crashes involving drowsy drivers — drowsy_driver","text":"FARS FARS data object searched.","code":""},{"path":"https://s87jackson.github.io/rfars/reference/drugs.html","id":null,"dir":"Reference","previous_headings":"","what":"(Internal) Find crashes involving drugs — drugs","title":"(Internal) Find crashes involving drugs — drugs","text":"internal functions take FARS object created use_fars look     various cases, distracted drowsy drivers.","code":""},{"path":"https://s87jackson.github.io/rfars/reference/drugs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"(Internal) Find crashes involving drugs — drugs","text":"","code":"drugs(FARS)"},{"path":"https://s87jackson.github.io/rfars/reference/drugs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"(Internal) Find crashes involving drugs — drugs","text":"FARS FARS data object searched.","code":""},{"path":"https://s87jackson.github.io/rfars/reference/fars_data_changes.html","id":null,"dir":"Reference","previous_headings":"","what":"Changes in FARS Data Elements by Data File and Year — fars_data_changes","title":"Changes in FARS Data Elements by Data File and Year — fars_data_changes","text":"dataset describing major changes FARS data system time.","code":""},{"path":"https://s87jackson.github.io/rfars/reference/fars_data_changes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Changes in FARS Data Elements by Data File and Year — fars_data_changes","text":"","code":"fars_data_changes"},{"path":"https://s87jackson.github.io/rfars/reference/fars_data_changes.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Changes in FARS Data Elements by Data File and Year — fars_data_changes","text":"data frame 46 rows 480 columns.","code":""},{"path":"https://s87jackson.github.io/rfars/reference/fars_data_changes.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Changes in FARS Data Elements by Data File and Year — fars_data_changes","text":"https://crashstats.nhtsa.dot.gov/Api/Public/ViewPublication/813254","code":""},{"path":"https://s87jackson.github.io/rfars/reference/fars_data_changes.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Changes in FARS Data Elements by Data File and Year — fars_data_changes","text":"See Appendix F 2020 Analytical User’s Manual information.","code":""},{"path":"https://s87jackson.github.io/rfars/reference/fars_data_structure.html","id":null,"dir":"Reference","previous_headings":"","what":"FARS data structure — fars_data_structure","title":"FARS data structure — fars_data_structure","text":"dataset describing structure level raw FARS data file.","code":""},{"path":"https://s87jackson.github.io/rfars/reference/fars_data_structure.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FARS data structure — fars_data_structure","text":"","code":"fars_data_structure"},{"path":"https://s87jackson.github.io/rfars/reference/fars_data_structure.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"FARS data structure — fars_data_structure","text":"data frame 27 rows 4 columns. tablename cleaned name data file structure either one multiple, indicating number rows per entity level entity level (crash, vehicle, person) data file year_created first year data file use","code":""},{"path":"https://s87jackson.github.io/rfars/reference/fars_data_structure.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"FARS data structure — fars_data_structure","text":"Page 19 2020 Analytical User’s Manual","code":""},{"path":"https://s87jackson.github.io/rfars/reference/fars_varnames.html","id":null,"dir":"Reference","previous_headings":"","what":"FARS Variable Names — fars_varnames","title":"FARS Variable Names — fars_varnames","text":"dataset translates machine-readable variable names friendly names","code":""},{"path":"https://s87jackson.github.io/rfars/reference/fars_varnames.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FARS Variable Names — fars_varnames","text":"","code":"fars_varnames"},{"path":"https://s87jackson.github.io/rfars/reference/fars_varnames.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"FARS Variable Names — fars_varnames","text":"data frame 468 rows 4 columns","code":""},{"path":"https://s87jackson.github.io/rfars/reference/fars_varnames.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"FARS Variable Names — fars_varnames","text":"https://crashstats.nhtsa.dot.gov/Api/Public/ViewPublication/813254","code":""},{"path":"https://s87jackson.github.io/rfars/reference/fars_varnames.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"FARS Variable Names — fars_varnames","text":"See 2020 Analytical User’s Manual information. table cleaned name data file original original variable name friendly human-readable (friendly) version variable name original_clean cleaned name variable","code":""},{"path":"https://s87jackson.github.io/rfars/reference/geo_relations.html","id":null,"dir":"Reference","previous_headings":"","what":"Synonym table for various geographical scales — geo_relations","title":"Synonym table for various geographical scales — geo_relations","text":"dataset providing different ways refer states counties.","code":""},{"path":"https://s87jackson.github.io/rfars/reference/geo_relations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Synonym table for various geographical scales — geo_relations","text":"","code":"geo_relations"},{"path":"https://s87jackson.github.io/rfars/reference/geo_relations.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Synonym table for various geographical scales — geo_relations","text":"data frame 3,142 rows 6 variables: fips_state 2-digit FIPS code indicating state fips_county 3-digit FIPS code indicating county within state fips_tract 6-digit FIPS code indicating tract within county state_name_abbr 2-character, capitalized state abbreviation state_name_full fully spelled case-sensitive state name county_name_abbr abbreviated county name (usually minus word 'County') county_name_full fully spelled case-sensitive county name","code":""},{"path":"https://s87jackson.github.io/rfars/reference/geo_relations.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Synonym table for various geographical scales — geo_relations","text":"https://www.census.gov/geographies/reference-files/2015/demo/popest/2015-fips.html","code":""},{"path":"https://s87jackson.github.io/rfars/reference/get_fars.html","id":null,"dir":"Reference","previous_headings":"","what":"Get FARS data — get_fars","title":"Get FARS data — get_fars","text":"function wrapper download_fars prep_fars.     downloads raw files NHTSA produces analysis-ready data files.","code":""},{"path":"https://s87jackson.github.io/rfars/reference/get_fars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get FARS data — get_fars","text":"","code":"get_fars(years = 2015:2020, states = NULL, save_dir = getwd(), proceed = FALSE)"},{"path":"https://s87jackson.github.io/rfars/reference/get_fars.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get FARS data — get_fars","text":"years Years downloaded, yyyy (character numeric formats), currently limited 2016-2020 states (Optional) States keep. Leave NULL keep states. Can specified full state name (e.g. \"Virginia\"), abbreviation (\"VA\"), FIPS code (51). save_dir Directory store files proceed Logical, downloading proceed without user's permission (set FALSE default).","code":""},{"path":"https://s87jackson.github.io/rfars/reference/get_fars.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get FARS data — get_fars","text":"Prepared data files stored save_dir/FARS data/prepared/","code":""},{"path":[]},{"path":"https://s87jackson.github.io/rfars/reference/get_fars.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get FARS data — get_fars","text":"","code":"if (FALSE) { get_fars(c(\"2019\", \"2020\")) get_fars(2016:2020, \"Virginia\") get_fars(2020, \"NC\") }"},{"path":"https://s87jackson.github.io/rfars/reference/large_trucks.html","id":null,"dir":"Reference","previous_headings":"","what":"(Internal) Find crashes involving large trucks — large_trucks","title":"(Internal) Find crashes involving large trucks — large_trucks","text":"internal functions take FARS object created use_fars look     various cases, distracted drowsy drivers.","code":""},{"path":"https://s87jackson.github.io/rfars/reference/large_trucks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"(Internal) Find crashes involving large trucks — large_trucks","text":"","code":"large_trucks(FARS)"},{"path":"https://s87jackson.github.io/rfars/reference/large_trucks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"(Internal) Find crashes involving large trucks — large_trucks","text":"FARS FARS data object searched.","code":""},{"path":"https://s87jackson.github.io/rfars/reference/motorcycle.html","id":null,"dir":"Reference","previous_headings":"","what":"(Internal) Find crashes involving motorcycles — motorcycle","title":"(Internal) Find crashes involving motorcycles — motorcycle","text":"internal functions take FARS object created use_fars look     various cases, distracted drowsy drivers.","code":""},{"path":"https://s87jackson.github.io/rfars/reference/motorcycle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"(Internal) Find crashes involving motorcycles — motorcycle","text":"","code":"motorcycle(FARS)"},{"path":"https://s87jackson.github.io/rfars/reference/motorcycle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"(Internal) Find crashes involving motorcycles — motorcycle","text":"FARS FARS data object searched.","code":""},{"path":"https://s87jackson.github.io/rfars/reference/older_driver.html","id":null,"dir":"Reference","previous_headings":"","what":"(Internal) Find crashes involving older drivers — older_driver","title":"(Internal) Find crashes involving older drivers — older_driver","text":"internal functions take FARS object created use_fars look     various cases, distracted drowsy drivers.","code":""},{"path":"https://s87jackson.github.io/rfars/reference/older_driver.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"(Internal) Find crashes involving older drivers — older_driver","text":"","code":"older_driver(FARS)"},{"path":"https://s87jackson.github.io/rfars/reference/older_driver.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"(Internal) Find crashes involving older drivers — older_driver","text":"FARS FARS data object searched.","code":""},{"path":"https://s87jackson.github.io/rfars/reference/pedalcyclist.html","id":null,"dir":"Reference","previous_headings":"","what":"(Internal) Find crashes involving pedalcyclists — pedalcyclist","title":"(Internal) Find crashes involving pedalcyclists — pedalcyclist","text":"internal functions take FARS object created use_fars look     various cases, distracted drowsy drivers.","code":""},{"path":"https://s87jackson.github.io/rfars/reference/pedalcyclist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"(Internal) Find crashes involving pedalcyclists — pedalcyclist","text":"","code":"pedalcyclist(FARS)"},{"path":"https://s87jackson.github.io/rfars/reference/pedalcyclist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"(Internal) Find crashes involving pedalcyclists — pedalcyclist","text":"FARS FARS data object searched.","code":""},{"path":"https://s87jackson.github.io/rfars/reference/pedbike.html","id":null,"dir":"Reference","previous_headings":"","what":"(Internal) Find crashes involving pedstrians or bicyclists — pedbike","title":"(Internal) Find crashes involving pedstrians or bicyclists — pedbike","text":"internal functions take FARS object created use_fars look     various cases, distracted drowsy drivers.","code":""},{"path":"https://s87jackson.github.io/rfars/reference/pedbike.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"(Internal) Find crashes involving pedstrians or bicyclists — pedbike","text":"","code":"pedbike(FARS)"},{"path":"https://s87jackson.github.io/rfars/reference/pedbike.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"(Internal) Find crashes involving pedstrians or bicyclists — pedbike","text":"FARS FARS data object searched.","code":""},{"path":"https://s87jackson.github.io/rfars/reference/pedestrian.html","id":null,"dir":"Reference","previous_headings":"","what":"(Internal) Find crashes involving pedestrians — pedestrian","title":"(Internal) Find crashes involving pedestrians — pedestrian","text":"internal functions take FARS object created use_fars look     various cases, distracted drowsy drivers.","code":""},{"path":"https://s87jackson.github.io/rfars/reference/pedestrian.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"(Internal) Find crashes involving pedestrians — pedestrian","text":"","code":"pedestrian(FARS)"},{"path":"https://s87jackson.github.io/rfars/reference/pedestrian.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"(Internal) Find crashes involving pedestrians — pedestrian","text":"FARS FARS data object searched.","code":""},{"path":"https://s87jackson.github.io/rfars/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://s87jackson.github.io/rfars/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://s87jackson.github.io/rfars/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://s87jackson.github.io/rfars/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling `rhs(lhs)`.","code":""},{"path":"https://s87jackson.github.io/rfars/reference/police_pursuit.html","id":null,"dir":"Reference","previous_headings":"","what":"(Internal) Find crashes involving police pursuits — police_pursuit","title":"(Internal) Find crashes involving police pursuits — police_pursuit","text":"internal functions take FARS object created use_fars look     various cases, distracted drowsy drivers.","code":""},{"path":"https://s87jackson.github.io/rfars/reference/police_pursuit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"(Internal) Find crashes involving police pursuits — police_pursuit","text":"","code":"police_pursuit(FARS)"},{"path":"https://s87jackson.github.io/rfars/reference/police_pursuit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"(Internal) Find crashes involving police pursuits — police_pursuit","text":"FARS FARS data object searched.","code":""},{"path":"https://s87jackson.github.io/rfars/reference/prep_fars.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare FARS data — prep_fars","title":"Prepare FARS data — prep_fars","text":"Combine raw files create analysis-ready FARS data files.","code":""},{"path":"https://s87jackson.github.io/rfars/reference/prep_fars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare FARS data — prep_fars","text":"","code":"prep_fars(   raw_dir = \"FARS data/raw\",   states = NULL,   years = NULL,   proceed = FALSE )"},{"path":"https://s87jackson.github.io/rfars/reference/prep_fars.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare FARS data — prep_fars","text":"raw_dir Directory raw files currently saved. states (Optional) States keep. Leave NULL keep states. Can specified full state name (e.g. \"Virginia\"), abbreviation (\"VA\"), FIPS code (51). years (Optional) Years keep. Leave NULL use years data exist raw_dir. proceed Logical, downloading proceed without user's permission (set FALSE default).","code":""},{"path":"https://s87jackson.github.io/rfars/reference/prep_fars.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare FARS data — prep_fars","text":"Produces four files year: yyyy_flat.csv, yyyy_multi_acc.csv,     yyyy_multi_veh.csv, yyyy_multi_per.csv.","code":""},{"path":"https://s87jackson.github.io/rfars/reference/prep_fars.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Prepare FARS data — prep_fars","text":"Flat files wide-formatted presented person level.     crashes involve least one motor vehicle,     may contain one multiple people. three     entities crash data. flat files therefore repeat data elements     across multiple rows. Please conduct analysis entity mind.      data elements can include multiple values data level     (e.g., multiple weather conditions corresponding crash, multiple     crash factors related vehicle person). elements     collected yyyy_multi_[acc/veh/per].csv files long format.     files contain crash, vehicle, person identifiers, two     variables labelled name value. correspond     variable names raw data files corresponding values,     respectively.      flat files contain one row per person (may result multiple     rows associated vehicles crashes), multi files can     contain variable number rows crash entity.      Consult Analytical User’s Manual     information.","code":""},{"path":"https://s87jackson.github.io/rfars/reference/prep_fars.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prepare FARS data — prep_fars","text":"","code":"if (FALSE) { prep_fars(\"Virginia\") prep_fars() prep_fars(\"NC\") }"},{"path":"https://s87jackson.github.io/rfars/reference/prep_fars_2015.html","id":null,"dir":"Reference","previous_headings":"","what":"Handle yyyy data preparation — prep_fars_2015","title":"Handle yyyy data preparation — prep_fars_2015","text":"Handle yyyy data preparation","code":""},{"path":"https://s87jackson.github.io/rfars/reference/prep_fars_2015.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Handle yyyy data preparation — prep_fars_2015","text":"","code":"prep_fars_2015(y, wd, rawfiles, prepared_dir, geo_filtered)"},{"path":"https://s87jackson.github.io/rfars/reference/prep_fars_2015.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Handle yyyy data preparation — prep_fars_2015","text":"y year, passed prep_fars wd working directory, , passed prep_fars rawfiles dataframe translating filenames standard terms, passed prep_fars prepared_dir location prepared files saved, passed prep_fars geo_filtered dataframe filtered geo-identifiers, passed prep_fars","code":""},{"path":"https://s87jackson.github.io/rfars/reference/prep_fars_2015.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Handle yyyy data preparation — prep_fars_2015","text":"Produces four files year: yyyy_flat.csv, yyyy_multi_acc.csv,     yyyy_multi_veh.csv, yyyy_multi_per.csv","code":""},{"path":"https://s87jackson.github.io/rfars/reference/prep_fars_2017.html","id":null,"dir":"Reference","previous_headings":"","what":"Handle yyyy data preparation — prep_fars_2017","title":"Handle yyyy data preparation — prep_fars_2017","text":"Handle yyyy data preparation","code":""},{"path":"https://s87jackson.github.io/rfars/reference/prep_fars_2017.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Handle yyyy data preparation — prep_fars_2017","text":"","code":"prep_fars_2017(y, wd, rawfiles, prepared_dir, geo_filtered)"},{"path":"https://s87jackson.github.io/rfars/reference/prep_fars_2017.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Handle yyyy data preparation — prep_fars_2017","text":"y year, passed prep_fars wd working directory, , passed prep_fars rawfiles dataframe translating filenames standard terms, passed prep_fars prepared_dir location prepared files saved, passed prep_fars geo_filtered dataframe filtered geo-identifiers, passed prep_fars","code":""},{"path":"https://s87jackson.github.io/rfars/reference/prep_fars_2017.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Handle yyyy data preparation — prep_fars_2017","text":"Produces four files year: yyyy_flat.csv, yyyy_multi_acc.csv,     yyyy_multi_veh.csv, yyyy_multi_per.csv","code":""},{"path":"https://s87jackson.github.io/rfars/reference/prep_fars_2018.html","id":null,"dir":"Reference","previous_headings":"","what":"Handle yyyy data preparation — prep_fars_2018","title":"Handle yyyy data preparation — prep_fars_2018","text":"Handle yyyy data preparation","code":""},{"path":"https://s87jackson.github.io/rfars/reference/prep_fars_2018.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Handle yyyy data preparation — prep_fars_2018","text":"","code":"prep_fars_2018(y, wd, rawfiles, prepared_dir, geo_filtered)"},{"path":"https://s87jackson.github.io/rfars/reference/prep_fars_2018.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Handle yyyy data preparation — prep_fars_2018","text":"y year, passed prep_fars wd working directory, , passed prep_fars rawfiles dataframe translating filenames standard terms, passed prep_fars prepared_dir location prepared files saved, passed prep_fars geo_filtered dataframe filtered geo-identifiers, passed prep_fars","code":""},{"path":"https://s87jackson.github.io/rfars/reference/prep_fars_2018.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Handle yyyy data preparation — prep_fars_2018","text":"Produces four files year: yyyy_flat.csv, yyyy_multi_acc.csv,     yyyy_multi_veh.csv, yyyy_multi_per.csv","code":""},{"path":"https://s87jackson.github.io/rfars/reference/prep_fars_2019.html","id":null,"dir":"Reference","previous_headings":"","what":"Handle yyyy data preparation — prep_fars_2019","title":"Handle yyyy data preparation — prep_fars_2019","text":"Handle yyyy data preparation","code":""},{"path":"https://s87jackson.github.io/rfars/reference/prep_fars_2019.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Handle yyyy data preparation — prep_fars_2019","text":"","code":"prep_fars_2019(y, wd, rawfiles, prepared_dir, geo_filtered)"},{"path":"https://s87jackson.github.io/rfars/reference/prep_fars_2019.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Handle yyyy data preparation — prep_fars_2019","text":"y year, passed prep_fars wd working directory, , passed prep_fars rawfiles dataframe translating filenames standard terms, passed prep_fars prepared_dir location prepared files saved, passed prep_fars geo_filtered dataframe filtered geo-identifiers, passed prep_fars","code":""},{"path":"https://s87jackson.github.io/rfars/reference/prep_fars_2019.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Handle yyyy data preparation — prep_fars_2019","text":"Produces four files year: yyyy_flat.csv, yyyy_multi_acc.csv,     yyyy_multi_veh.csv, yyyy_multi_per.csv","code":""},{"path":"https://s87jackson.github.io/rfars/reference/prep_fars_2020.html","id":null,"dir":"Reference","previous_headings":"","what":"Handle yyyy data preparation — prep_fars_2020","title":"Handle yyyy data preparation — prep_fars_2020","text":"Handle yyyy data preparation","code":""},{"path":"https://s87jackson.github.io/rfars/reference/prep_fars_2020.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Handle yyyy data preparation — prep_fars_2020","text":"","code":"prep_fars_2020(y, wd, rawfiles, prepared_dir, geo_filtered)"},{"path":"https://s87jackson.github.io/rfars/reference/prep_fars_2020.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Handle yyyy data preparation — prep_fars_2020","text":"y year, passed prep_fars wd working directory, , passed prep_fars rawfiles dataframe translating filenames standard terms, passed prep_fars prepared_dir location prepared files saved, passed prep_fars geo_filtered dataframe filtered geo-identifiers, passed prep_fars","code":""},{"path":"https://s87jackson.github.io/rfars/reference/prep_fars_2020.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Handle yyyy data preparation — prep_fars_2020","text":"Produces four files year: yyyy_flat.csv, yyyy_multi_acc.csv,     yyyy_multi_veh.csv, yyyy_multi_per.csv","code":""},{"path":"https://s87jackson.github.io/rfars/reference/read_basic_csv.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal function that takes care of basic CSV reading — read_basic_csv","title":"Internal function that takes care of basic CSV reading — read_basic_csv","text":"Internal function takes care basic CSV reading","code":""},{"path":"https://s87jackson.github.io/rfars/reference/read_basic_csv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal function that takes care of basic CSV reading — read_basic_csv","text":"","code":"read_basic_csv(x, wd, rawfiles)"},{"path":"https://s87jackson.github.io/rfars/reference/read_basic_csv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal function that takes care of basic CSV reading — read_basic_csv","text":"x cleaned name data table (CSV). wd working directory files rawfiles data frame connecting raw filenames cleaned ones.","code":""},{"path":"https://s87jackson.github.io/rfars/reference/speeding.html","id":null,"dir":"Reference","previous_headings":"","what":"(Internal) Find crashes involving speeding — speeding","title":"(Internal) Find crashes involving speeding — speeding","text":"internal functions take FARS object created use_fars look     various cases, distracted drowsy drivers.","code":""},{"path":"https://s87jackson.github.io/rfars/reference/speeding.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"(Internal) Find crashes involving speeding — speeding","text":"","code":"speeding(FARS)"},{"path":"https://s87jackson.github.io/rfars/reference/speeding.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"(Internal) Find crashes involving speeding — speeding","text":"FARS FARS data object searched.","code":""},{"path":"https://s87jackson.github.io/rfars/reference/usenames.html","id":null,"dir":"Reference","previous_headings":"","what":"(INTERNAL) Use decoded variables instead of encoded ones — usenames","title":"(INTERNAL) Use decoded variables instead of encoded ones — usenames","text":"raw data files include two versions many data elements: encoded one     (using numbers indicate characteristics injury severity,     relation roadway, race, etc.) another already     decoded. variables labelled according convention: x     xname, latter decoded version. internal function     goes given data frame, removing decoded versions     renaming encoded ones remove 'name' suffix.","code":""},{"path":"https://s87jackson.github.io/rfars/reference/usenames.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"(INTERNAL) Use decoded variables instead of encoded ones — usenames","text":"","code":"usenames(df)"},{"path":"https://s87jackson.github.io/rfars/reference/usenames.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"(INTERNAL) Use decoded variables instead of encoded ones — usenames","text":"df Data frame versions variables.","code":""},{"path":"https://s87jackson.github.io/rfars/reference/usenames.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"(INTERNAL) Use decoded variables instead of encoded ones — usenames","text":"data frame encoded variables replaced decoded versions.","code":""},{"path":[]},{"path":"https://s87jackson.github.io/rfars/reference/use_fars.html","id":null,"dir":"Reference","previous_headings":"","what":"Use FARS data files — use_fars","title":"Use FARS data files — use_fars","text":"Combine multiple years prepared FARS data stored CSV files bring     current environment.","code":""},{"path":"https://s87jackson.github.io/rfars/reference/use_fars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Use FARS data files — use_fars","text":"","code":"use_fars(prepared_dir = \"FARS data\", years = NULL)"},{"path":"https://s87jackson.github.io/rfars/reference/use_fars.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Use FARS data files — use_fars","text":"prepared_dir Directory prepared files currently saved. years (Optional) Years use.","code":""},{"path":"https://s87jackson.github.io/rfars/reference/use_fars.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Use FARS data files — use_fars","text":"Returns either single data frame (multi=NULL) list     containing combined flat file data frame specified multi files.","code":""},{"path":[]},{"path":"https://s87jackson.github.io/rfars/reference/use_fars.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Use FARS data files — use_fars","text":"","code":"if (FALSE) { myData <- use_fars() }"},{"path":"https://s87jackson.github.io/rfars/reference/validate_states.html","id":null,"dir":"Reference","previous_headings":"","what":"(Internal) Validate user-provided list of states — validate_states","title":"(Internal) Validate user-provided list of states — validate_states","text":"(Internal) Validate user-provided list states","code":""},{"path":"https://s87jackson.github.io/rfars/reference/validate_states.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"(Internal) Validate user-provided list of states — validate_states","text":"","code":"validate_states(states)"},{"path":"https://s87jackson.github.io/rfars/reference/validate_states.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"(Internal) Validate user-provided list of states — validate_states","text":"states States specified get_fars, prep_fars, counts","code":""},{"path":"https://s87jackson.github.io/rfars/reference/validate_years.html","id":null,"dir":"Reference","previous_headings":"","what":"(Internal) Validate user-provided list of states — validate_years","title":"(Internal) Validate user-provided list of states — validate_years","text":"(Internal) Validate user-provided list states","code":""},{"path":"https://s87jackson.github.io/rfars/reference/validate_years.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"(Internal) Validate user-provided list of states — validate_years","text":"","code":"validate_years(years)"},{"path":"https://s87jackson.github.io/rfars/reference/validate_years.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"(Internal) Validate user-provided list of states — validate_years","text":"years Years specified download_fars, get_fars, prep_fars, counts","code":""},{"path":"https://s87jackson.github.io/rfars/reference/young_driver.html","id":null,"dir":"Reference","previous_headings":"","what":"(Internal) Find crashes involving young drivers — young_driver","title":"(Internal) Find crashes involving young drivers — young_driver","text":"internal functions take FARS object created use_fars look     various cases, distracted drowsy drivers.","code":""},{"path":"https://s87jackson.github.io/rfars/reference/young_driver.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"(Internal) Find crashes involving young drivers — young_driver","text":"","code":"young_driver(FARS)"},{"path":"https://s87jackson.github.io/rfars/reference/young_driver.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"(Internal) Find crashes involving young drivers — young_driver","text":"FARS FARS data object searched.","code":""},{"path":"https://s87jackson.github.io/rfars/news/index.html","id":"rfars-010","dir":"Changelog","previous_headings":"","what":"rfars 0.1.0","title":"rfars 0.1.0","text":"Added NEWS.md file track changes package.","code":""}]
